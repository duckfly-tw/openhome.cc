<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>






  
  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">






  
  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">






  
  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">






  
  
  
  
  
  
  <title>LinkedList</title>
</head>


<body>






<h3><a href="../index.html">From
Gossip@Openhome</a></h3>






<h1><a href="index.html">Java Gossip: LinkedList</a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 676px; vertical-align: top;"> <small>List類是以物件加入（add）容器的順序來排列它們，如果您的物件加入之後大都是為了取出，而不會常作移除或插入（Insert）的動作，則使用ArrayList，<span style="font-weight: bold;">如果您會經常從容器中作移除或插入物件的動作，則使用LinkedList會獲得較好的效能。</span><br>

      <br>



LinkedList實作了List介面，並增加了一些移除與插入物件的特定方法，像是<span style="font-weight: bold;">addFirst()、addLast()、 getFirst()、getLast()、removeFirst( )、removeLast()</span>等等，由於在插入與移除時有較好的效能，適合拿來實作堆疊（Stack）與佇列（Queue）。<br>

      <br>



以下實作一個簡單的FILO（First-In, Last-Out）堆疊，可以存入字串：</small>



      <br>






      
      <ul>

        <li> StringStack.java </li>

      
      </ul>




      
      <pre>package onlyfun.caterpillar;<br> <br>import java.util.*;<br> <br>public class StringStack {<br>    private LinkedList&lt;String&gt; linkedList;<br>    <br>    public StringStack() {<br>        linkedList = new LinkedList&lt;String&gt;();<br>    }<br>    <br>    public void push(String name) { <br>        linkedList.addFirst(name);<br>    }<br>    <br>    public String top() {<br>        return linkedList.getFirst();<br>    }<br>    <br>    public String pop() {<br>        return linkedList.removeFirst();<br>    }<br> <br>    public boolean isEmpty() {<br>        return linkedList.isEmpty();<br>    }<br>} <br></pre>




      <br>

      <small>

而對於FIFO（First-In, First-Out）的佇列，我們也可以使用LinkedList來實作：</small><br>




      
      <ul>

        <li> StringQueue.java </li>

      
      </ul>




      
      <pre>package onlyfun.caterpillar;<br> <br>import java.util.*;<br> <br>public class StringQueue {<br>    private LinkedList&lt;String&gt; linkedList;<br>    <br>    public StringQueue() {<br>        linkedList = new LinkedList&lt;String&gt;();<br>    }<br>    <br>    public void put(String name) { <br>        linkedList.addFirst(name);<br>    }<br>    <br>    public String get() { <br>        return linkedList.removeLast(); <br>    }<br> <br>    public boolean isEmpty() {<br>        return linkedList.isEmpty();<br>    }<br>} <br></pre>




      <br>

      <small>

事實上，如果您要使用佇列的功能，您也不用親自實作，在J2SE
5.0中，LinkedList也實作了新加入的<span style="font-weight: bold;">java.util.Queue介面</span>，這個介面有五個必須實作的方法：</small><br>




      
      <table border="1" width="100%">




  <tbody>




    <tr>




      <td align="left" valign="top"><small>element() </small></td>




      <td align="left" valign="top"><small>取得但不移除佇列第一個元件，佇列為空時會丟出例外 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>offer() </small></td>




      <td align="left" valign="top"><small>加入一個元素至佇列中 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>peek() </small></td>




      <td align="left" valign="top"><small>取得但不移除佇列第一個元件 </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>poll() </small></td>




      <td align="left" valign="top"><small>取得並移去佇列第一個元件，佇列為空時傳回null </small></td>




    </tr>




    <tr>




      <td align="left" valign="top"><small>remove() </small></td>




      <td align="left" valign="top"><small>取得並移除佇列第一個元件 </small></td>




    </tr>




  
  
  
        
        </tbody>
      
      </table>




      <br>

      <small>

要使用佇列的功能，您只要類似這樣的宣告：<br>

      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">Queue&lt;String&gt; queue = new LinkedList&lt;String&gt;();</span></small>

      <span style="font-weight: bold; font-style: italic;"><br>



      </span> </td>


      <td style="width: 250px; text-align: center; vertical-align: top;"><!-- adsense for content--><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型 160 x 600 廣告 --><ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="3747048883"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><br><br><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型 160 x 600 廣告 --><ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="3747048883"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><br><br><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型 160 x 600 廣告 --><ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="3747048883"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><br><br><br> <!-- adsense for content end --></td>


    </tr>


  
  </tbody>
</table>


<br>

<br>

<div style="margin-left: 40px;"><span style="font-weight: bold; font-style: italic;"><br>



<br>



</span></div>






<div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
</body>
</html>
