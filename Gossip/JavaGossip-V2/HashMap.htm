<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>





  
  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">





  
  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">





  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">





  
  
  
  
  
  <title>HashMap</title>
</head>


<body>





<h3><a href="../index.html">From
Gossip@Openhome</a></h3>





<h1><a href="index.html">Java Gossip:&nbsp;HashMap</a></h1>


<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">


  <tbody>


    <tr>


      <td style="width: 676px; vertical-align: top;"> <small>HashMap實作Map介面，內部實作使用Hash Table，讓您在常數時間內可以尋得<span style="font-weight: bold;">key/value</span>對。<br>

      <br>


所謂的key/value對，簡單的說，您將Map容器物件當作一個有很多間房間的房子，每個房間的門有一把鑰匙，您將物件儲存至房間中時，要順便擁有一把鑰匙，下次要取回物件時，就是根據這把鑰匙取得。<br>

      <br>


以一個簡單的例子來作說明：</small>

      <br>





      
      <ul>

        <li> HashMapDemo.java
  </li>

      
      </ul>



      
      <pre>package onlyfun.caterpillar;<br> <br>import java.util.*;<br> <br>public class HashMapDemo {<br>    public static void main(String[] args) {<br>        Map&lt;String, String&gt; map = <br>                        new HashMap&lt;String, String&gt;();<br>        <br>        map.put("caterpillar", "caterpillar's message!!");<br>        map.put("justin", "justin's message!!");<br>        <br>        System.out.println(map.get("justin"));<br>        System.out.println(map.get("caterpillar"));<br>    }<br>} <br></pre>



      <br>

      <small>
在宣告Map型態時，您指定了key/value各自的型態，這邊都是宣告為String，也就是以String物件作為key物件的型態，而
value也是以String物件作為其型態。<br>

      <br>


使用Map的put()方法將物件存入，必須同時指定key/value，而要取回物件時，則指定key，程式的執行結果如下：</small>

      <span class="postbody"></span><br>





      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">





  <tbody>





    <tr>





      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">justin's message!!<br>


caterpillar's message!!</span></small><span style="color: rgb(255, 255, 255);"><br>





      </span></td>





    </tr>





  
  
  
  
        
        </tbody>
      
      </table>





      <br>

      <small>

HashMap是個被經常使用的物件，您可以參考下面幾個例子中HashMap的應用：<br>

      </small>

      
      <ul>

        <li><small> <a class="wikilink" href="../DesignPattern/CommandPattern.htm">Command
模式</a>
  </small></li>

        <li><small> <a class="wikilink" href="../DesignPattern/ThreadSpecificStorage.htm">Thread-Specific
Storage 模式</a>
  </small></li>

        <li><small> <a class="wikilink" href="https://openhome.cc/Gossip/JSPServlet/ControllerExample.htm">控
制器（Servlet）</a>
  </small></li>

      
      </ul>



      <small><br>


可以使用<span style="font-weight: bold;">values()方法</span>返回一個Collection物件，如果您需要一次&#36873;代Map中所有的物件，這會很有用，例如：</small><br>



      
      <ul>

        <li> HashMapDemo.java
  </li>

      
      </ul>



      
      <pre>package onlyfun.caterpillar;<br> <br>import java.util.*;<br> <br>public class HashMapDemo {<br>    public static void main(String[] args) {<br>        Map&lt;String, String&gt; map = <br>                  new HashMap&lt;String, String&gt;();<br> <br>        map.put("justin", "justin's message!!");<br>        map.put("momor", "momor's message!!");<br>        map.put("caterpillar", "caterpillar's message!!");<br>        <br>        Collection collection = map.values();<br>        Iterator iterator = collection.iterator();<br>        while(iterator.hasNext()) {<br>            System.out.println(iterator.next());<br>        }<br>    }<br>} <br></pre>



      <br>

      <small>
執行結果：</small><span class="postbody"></span><br>





      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">





  <tbody>





    <tr>





      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">momor's message!!<br>


justin's message!!<br>


caterpillar's message!!</span></small><span style="color: rgb(255, 255, 255);"><br>





      </span></td>





    </tr>





  
  
  
  
        
        </tbody>
      
      </table>




      <br>

      <small>

HashMap使用Hash
Table，因而它有自己的排序方式，如果您想要在&#36873;代所有的物件時，依照插入的順序來排序，則可以使用LinkedHashMap，它是HashMap
的子類，使用values()所返回的Collection物件，其內含物件之順序即為當初您加入物件之順序，例如：</small><br>



      
      <ul>

        <li> LinkedHashMapDemo.java
  </li>

      
      </ul>



      
      <pre>package onlyfun.caterpillar;<br><br>import java.util.*;<br> <br>public class LinkedHashMapDemo {<br>    public static void main(String[] args) {<br>        Map&lt;String, String&gt; map = <br>                   new LinkedHashMap&lt;String, String&gt;();<br>        <br>        map.put("justin", "justin's message!!");<br>        map.put("momor", "momor's message!!");<br>        map.put("caterpillar", "caterpillar's message!!");<br>        <br>        Collection collection = map.values();<br>        Iterator iterator = collection.iterator();<br>        while(iterator.hasNext()) {<br>            System.out.println(iterator.next());<br>        }<br>    }<br>} <br></pre>



      <br>

      <small>
執行結果：</small><br>





      
      <table style="text-align: left; width: 100%;" border="0" cellpadding="2" cellspacing="2">





  <tbody>





    <tr>





      <td style="background-color: rgb(0, 0, 0);"><small><span style="color: rgb(255, 255, 255);">justin's message!!<br>


momor's message!!<br>


caterpillar's message!!</span></small><span style="color: rgb(255, 255, 255);"><br>





      </span></td>





    </tr>





  
  
  
  
        
        </tbody>
      
      </table>




      <br>


      <br>

 </td>


      <td style="width: 250px; text-align: center; vertical-align: top;"><!-- adsense for content--><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型 160 x 600 廣告 --><ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="3747048883"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><br><br><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型 160 x 600 廣告 --><ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="3747048883"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><br><br><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型 160 x 600 廣告 --><ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="3747048883"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><br><br><br> <!-- adsense for content end --></td>


    </tr>


  
  </tbody>
</table>


<br>

<br>





<div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
</body>
</html>
