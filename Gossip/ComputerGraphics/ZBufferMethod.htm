<!doctype html><html lang="zh-tw">
<head>
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="最大最小法 僅適用於曲面函式可以用顯函式y = f(x, z)來表示時，如果曲面函式非顯函式形式，則無法使用最大最小法來處理深度問題。

      


Z Buffer有些類似畫家演算法...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="Z Buffer法">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/ComputerGraphics/ZBufferMethod.htm">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="最大最小法 僅適用於曲面函式可以用顯函式y = f(x, z)來表示時，如果曲面函式非顯函式形式，則無法使用最大最小法來處理深度問題。

      


Z Buffer有些類似畫家演算法...">


    <title>Z Buffer法</title>

<link rel="stylesheet" href="../css/pure-0.6.0/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="../css/layouts/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="../css/caterpillar.css">
     <script async src="../google-code-prettify/run_prettify.js"></script>
<!-- 網頁層級廣告 --><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="ZBufferMethod.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span>
        
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="index.html">回電腦圖學</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="../images/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="../images/facebook.png"></a> </div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div><br><div class="ad" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-9750319131714390"
     data-ad-slot="3747048883"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div></li>
            </ul>
        </div>
    </div>

    <main id="main">
        <header class="header">
            <h1>Z Buffer法</h1>
        </header>

        <article class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
            
      <a href="MaxMinMethod.htm">最大最小法</a> 僅適用於曲面函式可以用顯函式y = f(x, z)來表示時，如果曲面函式非顯函式形式，則無法使用最大最小法來處理深度問題。<br>

      <br>


Z Buffer有些類似畫家演算法，都是以近景遮蓋遠景的方法來處理深度問題，所不同的是Z
Buffer使用的是裁剪（culling）的方法，並以像素為處理的對象，Z
Buffer將繪圖畫布內所有的座標當作一個深度緩衝區陣列zbuf[]的索引，每一個zbuf[]的元素記錄一個像素繪製時的Z深度資訊，可以使用它來
處理隱函式的圖形繪製。<br>

      <br>


假設畫布大小為600X400（X,
Y），則zbuf[]的大小必須設定為600*400=240000（X*Y），一開始時所有zbuf[]元素的值設定為一個極小值，也就是所有的像素都
表示空間中一個極深的位置，開始繪製之後，必須在zbuf[]中記錄每一個像素的z值。<br>

      <br>


zbuf[]是個一維陣列，所以我們必須計算座標的索引值，如果以列為主的話，則（x, y）對應的zbuf[]元素值為：zbuf[x + y * 畫布高度]；當然您也可以使用二維陣列zbuf[][]來直接對應。<br>

      <br>


如果後來要繪製的點之z值大於zbuf[]中記錄的值，表示此點在之前所繪點的前面，於是繪製此點來覆蓋之前所繪的點，並更新zbuf[]
中的z值為目前點的z值；如果後來要繪製的點之z值小於zbuf[]中記錄的值，表示此點在之前所繪點的後面，於是不用繪製此點，當然也不用更新zbuf
[]中的z值。<br>

      <br>


Z Buffer的深度處理方式無論從哪一個點開始繪製，都不會影響處理的結果；Z buffer的缺點就是使用大量的記憶體作為緩衝區，而由於它是以像素為處理的單位，所以需耗用相當大量的運算資源。<br>

      <br>


下面這個程式並不是一個很好的示範，因為我們並不是每個像素都考慮到，但可以讓您瞭解Z Buffer的演算法，如果要考慮所有的像素，這個程式要畫的好，最好加上陰影的效果，繪製的圖形之參數式如下，其中 a 表示圓的粗細： <br>

      













      
      <div style="margin-left: 40px;"><span style="font-family: Courier New,Courier,monospace; font-weight: bold;">x = (1+a*cosθ) * sinφ </span><br>

      <span style="font-family: Courier New,Courier,monospace; font-weight: bold;">y = a * sinθ </span><br>

      <span style="font-family: Courier New,Courier,monospace; font-weight: bold;">z = (1+a*cosθ)*cosφ </span><br>

      <span style="font-family: Courier New,Courier,monospace; font-weight: bold;">0 &lt; a &lt; 1, 0 &lt;= θ &lt;= 2π, 0 &lt;= φ &lt;= 2π </span>


      <br>


      </div>


















      <br>


      
      <ul>

        <li>Demo.java
  </li>

      
      </ul>



      
      <pre class="prettyprint"><code>package cc.openhome;<br><br>import java.awt.Color;<br>import java.awt.Graphics;<br>import javax.swing.JApplet;<br><br>import static java.lang.Math.*;<br><br>public class Demo extends JApplet {<br><br>    private int orgX;<br>    private int orgY;<br>    private double[] zbuf;<br><br>    public void init() {<br>        super.init();<br>        setBackground(Color.black);<br>        setSize(640, 480);<br>        orgX = getWidth() / 2;<br>        orgY = getHeight() / 2;<br>        zbuf = new double[getWidth() * getHeight()];<br>    }<br><br>    public void paint(Graphics g) {<br>        g.setColor(Color.yellow);<br>        // 從斜角繪製<br>        // 繞 x 軸轉 30 度<br>        double sinRotateX = sin(toRadians(30));<br>        double cosRotateX = cos(toRadians(30));<br><br>        double A = 0.3;<br>        double K = 200.0;<br><br>        for (int i = 0; i &lt; zbuf.length; i++) {<br>            zbuf[i] = -10000.0;<br>        }<br><br>        // 由於是單色，調整一下 j 與 i 可以看的明顯一些<br>        for (double j = 0; j &lt; 360; j += 0.2) {<br>            for (double i = 0; i &lt; 360; i += 0.1) {<br>                double sinRadI = sin(toRadians(i));<br>                double cosRadI = cos(toRadians(i));<br>                double sinRadJ = sin(toRadians(j));<br>                double cosRadJ = cos(toRadians(j));<br><br>                double x = (1 + A * cosRadI) * sinRadJ;<br>                double y = A * sinRadI;<br>                double z = (1 + A * cosRadI) * cosRadJ;<br><br>                // 立體旋轉，從斜角繪製，調整繪圖中心至視窗中心<br>                double pointX = orgX + K * x;<br>                double pointY = orgY - K * (y * cosRotateX - z * sinRotateX);<br><br>                // Z buffer處理<br>                int index = (int) (pointX + pointY * getWidth());<br>                <br>                if (z &gt; zbuf[index]) {<br>                    int px = (int) pointX;<br>                    int py = (int) pointY;<br>                    g.drawLine(px, py, px, py);<br>                    zbuf[index] = z;<br>                }<br>            }<br>        }<br>    }<br>}</code></pre>


      <br>
      以下是使用HTML5 Canvas的方式（如果瀏覽器支援HTML5 Canvas，例如最新版的Firexfox、Chrome、IE9等，可以直接將下面的內容存為HTML或按下檔名連結，直接載入瀏覽器執行觀看結果：<br>
      
      <ul>
        <li><a href="https://openhome.cc/Gossip/ComputerGraphics/html/ZBufferMethod-1.html">ZBufferMethod-1.html</a></li>
      </ul>
      <pre class="prettyprint"><code>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>    &lt;head&gt;<br>        &lt;meta content="text/html; charset=Big5" http-equiv="content-type"&gt;<br>        &lt;script type="text/javascript"&gt;<br>            window.onload = function() {<br>                function toRadians(angle) {<br>                    return angle * Math.PI / 180;<br>                }<br>                var sin = Math.sin;<br>                var cos = Math.cos;<br>                var sqrt = Math.sqrt;<br>                                <br>                var canvas1 = document.getElementById('canvas1');<br>                var context = canvas1.getContext('2d');<br>                <br>                var orgX = canvas1.width / 2;<br>                var orgY = canvas1.height / 2;<br>                <br>                var zbuf = new Array(canvas1.width * canvas1.height);<br>                                <br>                var sinRotateX = sin(toRadians(30));<br>                var cosRotateX = cos(toRadians(30));<br><br>                var A = 0.3;<br>                var K = 200.0;<br><br>                for(var i = 0; i &lt; zbuf.length; i++) {<br>                    zbuf[i] = -10000.0;<br>                }<br><br>                context.beginPath();<br>                var j = 0;<br>                // 這個繪製很耗時間<br>                // 在瀏覽器上會因Busy loop造成停止回應<br>                // 因此使用setTimeout來作一毫秒的暫停<br>                // 讓瀏覽器不至收不到程式回應而要求停止<br>                setTimeout(function() {<br>                    if(j &lt; 360) {<br>                        for(var i = 0; i &lt; 360; i += 0.1) {<br>                            var sinRadI = sin(toRadians(i));<br>                            var cosRadI = cos(toRadians(i));<br>                            var sinRadJ = sin(toRadians(j));<br>                            var cosRadJ = cos(toRadians(j));<br><br>                            var x = (1 + A * cosRadI) * sinRadJ;<br>                            var y = A * sinRadI;<br>                            var z = (1 + A * cosRadI) * cosRadJ;<br><br>                            // 立體旋轉，從斜角繪製，調整繪圖中心至視窗中心<br>                            var pointX = orgX + K * x;<br>                            var pointY = orgY - K * <br>                                  (y * cosRotateX - z * sinRotateX);<br><br>                            // Z buffer處理<br>                            var index = parseInt(<br>                                  pointX + pointY * canvas1.width);<br>                <br>                            if(z &gt; zbuf[index]) {<br>                                var px = parseInt(pointX);<br>                                var py = parseInt(pointY);<br>                                context.moveTo(pointX, pointY);<br>                                context.lineTo(pointX + 1, pointY + 1);<br>                                zbuf[index] = z;<br>                            }<br>                        }<br>                        j += 0.2;<br>                        setTimeout(arguments.callee, 1);<br>                    }<br>                    else {<br>                        context.stroke();<br>                        context.closePath();<br>                    }<br>                }, 1);<br>            };<br>        &lt;/script&gt;<br>    &lt;/head&gt;<br>    &lt;body&gt;       <br>        &lt;canvas id="canvas1" width="640" height="480"&gt;&lt;/canvas&gt;<br>    &lt;/body&gt;<br>&lt;/html&gt;<br></code></pre>
      <br>
在Firefox上的結果如下：
      <br>
      <div class="pure-g"><div class="pure-u-1"><img class="pure-img-responsive" alt="" src="images/ZBufferMethod-2.png" /></div></div><br>
<br>
      <br><br><br><div class="ad336-280" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div><br><div class="recommend" style="text-align: center;"><hr><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="4953478487" data-ad-format="autorelaxed"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></article></main></div></body>
<script src="../js/ui.js"></script>
</html>
<div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
