<!doctype html><html lang="zh-tw">
<head>
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="這個主題的動畫程式骨架主要是使用Java程式為範例，使用多執行緒來進行動畫的狀態改變，其它的程式語言其實類似，
最後也補充了不使用多執行緒的版本。 
      
       Java的程式骨...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="動畫程式骨架">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/ComputerGraphics/SkeletonOfAnimation.htm">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="這個主題的動畫程式骨架主要是使用Java程式為範例，使用多執行緒來進行動畫的狀態改變，其它的程式語言其實類似，
最後也補充了不使用多執行緒的版本。 
      
       Java的程式骨...">


    <title>動畫程式骨架</title>

<link rel="stylesheet" href="../css/pure-0.6.0/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="../css/layouts/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="../css/caterpillar.css">
     <script async src="../google-code-prettify/run_prettify.js"></script>
<!-- 網頁層級廣告 --><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="SkeletonOfAnimation.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span>
        
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="index.html">回電腦圖學</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="../images/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="../images/facebook.png"></a> </div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div><br><div class="ad" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-9750319131714390"
     data-ad-slot="3747048883"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div></li>
            </ul>
        </div>
    </div>

    <main id="main">
        <header class="header">
            <h1>動畫程式骨架</h1>
        </header>

        <article class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
            
      







這個主題的動畫程式骨架主要是使用Java程式為範例，使用多執行緒來進行動畫的狀態改變，其它的程式語言其實類似，
最後也補充了不使用多執行緒的版本。 
      
      <h2> Java的程式骨架 </h2>



      
      <pre class="prettyprint"><code>package cc.openhome; <br> <br>import java.awt.*;<br>import javax.swing.JApplet;<br> <br>public class AnimationSkeleton extends JApplet implements Runnable { <br>    // 定義多執行緒的方法 <br>    public void run() { <br>        // 動畫迴圈 <br>        while(true) { <br><br>            // 動畫的狀態改變、緩衝區繪圖 <br><br>            this.repaint();  // 重繪畫面 <br><br>            // 執行緒暫停 50 毫秒 <br>            try { <br>                Thread.sleep(50); // 避免Busy loop<br>            } <br>            catch(InterruptedException e) { <br>                    // 例外處理 <br>            } <br>        }  // while結束 <br>    }  // run()結束 <br> <br>    // 改寫update()，避免畫面不連續 <br>    public void update(Graphics g) { <br>        this.paint(g);  // 單純呼叫paint() <br>    } <br> <br>    public void paint(Graphics g) { <br>        super.paint(g);<br>        // 繪圖動作 <br>    } <br>} <br></code></pre>



      <br>

      
在這個骨架中，實作Runnable以使用多執行緒進行動畫狀態的改變，在這邊要養成一個習慣：「將動畫狀態的改變與繪
圖兩個工作分開。」這可以讓程式的邏輯更為清楚，雖然不使用多執行緒也可以繪製部份的動畫（例如畫框動畫），但上面這個骨架，在額外進行像是緩衝區繪圖時
相當方便。 <br>

      <br>


其中改寫update()的部份是為了避免繪圖的閃爍，這是因為Java在呼叫repaint()之後，repaint()會先呼叫
update()清除畫面，而update()預設會使用白色背景清除畫面，然後再繪上使用者指定的背景，這會造成Java在繪圖時的閃爍，改寫
update()直接呼叫paint()，讓它不重繪畫面，讓重繪的動作由您控制，以避免閃爍的發生。<br>
      <br>
      
      <h2>HTML 5 Canvas<br>
      </h2>
      
      <pre class="prettyprint"><code>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>    &lt;head&gt;<br>        &lt;meta content="text/html; charset=Big5" http-equiv="content-type"&gt;<br>        &lt;script type="text/javascript"&gt;<br>            window.onload = function() {<br>                var canvas1 = document.getElementById('canvas1');<br>                <br>                <br>                var context = canvas1.getContext('2d');<br>                <br>                setTimeout(function() {<br>                    context.beginPath();<br>                    context.clearRect(0, 0, canvas1.width, canvas1.height);<br>                    <br>                    // 動畫處理、繪圖緩衝區或清除部份區域<br>                    <br>                    context.stroke();<br>                    <br>                    // 每 20 毫秒重繪<br>                   &nbsp;setTimeout(arguments.callee, 20);<br>                    <br>                }, 20); // 每 20 毫秒重繪<br>            };<br>        &lt;/script&gt;<br>    &lt;/head&gt;<br>    &lt;body&gt;       <br>        &lt;canvas id="canvas1" width="640" height="480"&gt;&lt;/canvas&gt;<br>    &lt;/body&gt;<br>&lt;/html&gt;<br></code></pre>
      <br>
如果使用HTML 5
Canvas，由於JavaScript沒有像Java的Thread.sleep()方法，所以可以改用setInterval()來定時執行，動畫進
行最簡單的方式，就是每次清除上一次的畫面再重新繪製，比較複雜的話，可以使用繪圖緩衝區或清除部份區域。

 
      
      <h2> Turbo C 繪圖模式 </h2>



      
      <pre class="prettyprint"><code>#include &lt;graphics.h&gt; <br>#include &lt;stdlib.h&gt; <br> <br>void modify(); // 改變動畫狀態 <br>void draw();    // 繪圖 <br> <br>int main(void) { <br>    // 啟動繪圖模式 <br>    initgraph(&amp;driver, &amp;mode, "c:\\"); <br> <br>    // 動畫迴圈 <br>    while(1) { <br>        cleardevice();  // 清除螢幕，不一定需要這個函式 <br>        draw(); <br>        modify(); <br>        // 暫停執行 <br>        sleep(50); // 避免Busy loop    <br>    } <br> <br>    // 關閉繪圖模式 <br>    closegraph(); <br> <br>    return 0; <br>} <br> <br>void modify() { <br>    // 動畫狀態改變 <br>} <br> <br>void draw() { <br>    // 繪圖 <br>}  <br></code></pre>



      <br>

      
在Turbo C中，所有的繪圖與狀態改變都是在while迴圈中進行，函式的設計與使用者的互動必須多花一些心思，程式的邏輯性會變得複雜一些。<br>
      <br>
      <br>
      <br><br><br><div class="ad336-280" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div><br><div class="recommend" style="text-align: center;"><hr><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="4953478487" data-ad-format="autorelaxed"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></article></main></div></body>
<script src="../js/ui.js"></script>
</html>
<div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
