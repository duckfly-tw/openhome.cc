<!doctype html><html lang="zh-tw">
<head><meta http-equiv="refresh" content="0; URL=https://openhome.cc/Gossip/AlgorithmGossip/'https://openhome.cc/zh-tw/algorithm/numbers/guests/'">
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="說明

      
現將舉行一個餐會，讓訪客事先填寫到達時間與離開時間，為了掌握座位的數目，必須先估計不同時間的最大訪客數。


      
      解法

      
...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="最大訪客數">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/AlgorithmGossip/MaxGuest.htm">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="說明

      
現將舉行一個餐會，讓訪客事先填寫到達時間與離開時間，為了掌握座位的數目，必須先估計不同時間的最大訪客數。


      
      解法

      
...">


    <title>最大訪客數</title>

<link rel="stylesheet" href="../css/pure-0.6.0/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="../css/layouts/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="../css/caterpillar.css">
     <script async src="../google-code-prettify/run_prettify.js"></script>
<!-- 網頁層級廣告 --><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="MaxGuest.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span>
        
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="index.html">回 Algorithm</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="../images/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="../images/facebook.png"></a> </div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div><br><div class="ad" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-9750319131714390"
     data-ad-slot="3747048883"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div></li>
            </ul>
        </div>
    </div>

    <main id="main">
        <header class="header">
            <h1>最大訪客數</h1>
        </header>

        <article class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
             



      
      <h2>說明</h2>

      
現將舉行一個餐會，讓訪客事先填寫到達時間與離開時間，為了掌握座位的數目，必須先估計不同時間的最大訪客數。<br>


      
      <h2>解法</h2>

      
這個題目看似有些複雜，其實相當簡單，單就計算訪客數這個目的，同時考慮同一訪客的來訪時間與離開時間，反而會使程式變得複雜；只要將來訪時間與離開時間分開處理就可以了，假設訪客 i 的來訪時間為x[i]，而離開時間為y[i]。<br>

      <br>


在資料輸入完畢之後，將x[i]與y[i]分別進行排序（由小到大），道理很簡單，只要先計算某時之前總共來訪了多少訪客，然後再減去某時之前的離開訪客，就可以輕易的解出這個問題。 
      <br>





      <br>


      
      <h2> 實作：<a href="MaxGuest.htm#C">C</a>&nbsp;&nbsp; &nbsp;<a href="MaxGuest.htm#Java">Java</a>&nbsp;&nbsp; &nbsp;<a href="MaxGuest.htm#Python">Python</a>&nbsp;&nbsp; &nbsp;<a href="MaxGuest.htm#Scala">Scala&nbsp;</a>&nbsp;&nbsp; <a href="MaxGuest.htm#Ruby">Ruby</a>&nbsp;&nbsp;&nbsp; <a href="MaxGuest.htm#JavaScript">JavaScript</a>&nbsp;&nbsp;&nbsp; <a href="MaxGuest.htm#Haskell">Haskell</a><br>
      </h2>



      
      <ul>

        <li><a name="C"></a> C
  </li>

      
      </ul>



      
      <pre class="prettyprint"><code>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br>#include &lt;time.h&gt; <br><br>#define GUESTS 30<br><br>int compare(const void*, const void*);<br>int max(int[][GUESTS], int, int); <br><br>int main(void) { <br>    srand(time(NULL)); <br>    <br>    int visits[2][GUESTS] = {0};<br>    <br>    int i;<br>    for(i = 0; i &lt; GUESTS; i++) {<br>        visits[0][i] = (double) rand() / RAND_MAX * 24;<br>        visits[1][i] = (double) rand() / RAND_MAX * <br>            (24 - visits[0][i]) + visits[0][i];<br>    }<br><br>    // 預先排序 <br>    qsort(visits[0], GUESTS, sizeof(int), compare);<br>    qsort(visits[1], GUESTS, sizeof(int), compare);<br><br>    int t;<br>    for(t = 0; t &lt; 24; t++) {<br>        int num = max(visits, GUESTS, t);<br>        if(num != 0) {<br>            printf("%2d 時訪客數：%2d 位\n", t, num); <br>        }             <br>    }<br>    <br>    return 0; <br>} <br><br>int compare(const void* a, const void* b) {<br>    return *(int*)a - *(int*)b;<br>}<br><br>int max(int visits[][GUESTS], int count, int time) { <br>    int num, i;<br>    for(num = 0, i = 0; i &lt;= count; i++) {<br>        num = time &gt; visits[0][i] ? num + 1 : num;<br>        num = time &gt; visits[1][i] ? num - 1 : num;<br>    } <br>    return num; <br>}  <br></code></pre>



      <br>



      
      <ul>

        <li><a name="Java"></a> Java
  </li>

      
      </ul>



      
      <pre class="prettyprint"><code>import java.util.*;<br>import static java.lang.System.out;<br>import static java.util.Arrays.*;<br>import static java.lang.Math.random;<br><br>class Visitor {<br>    final int start;<br>    final int end;<br>    public Visitor(int start, int end) {<br>        this.start = start;<br>        this.end = end;<br>    }<br>}<br><br>public class Visitors {<br>    private List&lt;Visitor&gt; visitors = new ArrayList&lt;&gt;();<br>    <br>    public void add(Visitor v) {<br>        visitors.add(v);<br>    }<br>    <br>    public int max(int time) {<br>        return max(time, sortedSE());<br>    }<br>    <br>    public int[] max() {<br>        int[][] se = sortedSE();<br>        int[] timeList = new int[24];<br>        for(int t = 0; t &lt; 24; t++) { <br>            timeList[t] = max(t, se);<br>        } <br>        return timeList;<br>    }<br>    <br>    private int[][] sortedSE() {<br>        int[][] se = new int[2][visitors.size()];<br>        for(int i = 0; i &lt; visitors.size(); i++) {<br>            se[0][i] = visitors.get(i).start;<br>            se[1][i] = visitors.get(i).end;<br>        }<br>        sort(se[0]);<br>        sort(se[1]);<br>        return se;<br>    }<br>    <br>    private int max(int time, int[][] se) {<br>        int num = 0; <br>        for(int i = 0; i &lt; se[0].length; i++) { <br>            num = time &gt; se[0][i] ? num + 1 : num;<br>            num = time &gt; se[1][i] ? num - 1 : num;<br>        } <br>        return num;        <br>    }<br>    <br>    public static void main(String[] args) {<br>        final int GUESTS = 30;<br>        Visitors visitors = new Visitors();<br>        for(int i = 0; i &lt; GUESTS; i++) {<br>            int start = (int) (random() * 24);<br>            int end = (int) (start + random() * (24 - start));<br>            visitors.add(new Visitor(start, end));<br>        }<br>    <br>        int[] guests = visitors.max();<br>        for(int t = 0; t &lt; 24; t++) { <br>            out.printf("%2d 時訪客：%2d 位%n", t, guests[t]); <br>        } <br>    }<br>}<br></code></pre><br><ul><li><a name="Python"></a>Python</li></ul><pre class="prettyprint"><code>from functools import reduce<br>from random import random<br><br>def max(visits, time):<br>    return reduce(lambda num, t: num - 1 if time &gt; t else num, visits[1],<br>        reduce(lambda num, t: num + 1 if time &gt; t else num, visits[0] , 0))<br>        <br>GUESTS = 30<br>starts = [int(random() * 24) for i in range(GUESTS)]<br>ends = [int(random() * (24 - start) + start) for start in starts]<br><br>visits = [sorted(starts), sorted(ends)]<br>for t in range(24):<br>    num = max(visits, t)<br>    if num != 0:<br>        print("%2d 時訪客：%2d 位" % (t, num))</code></pre><br><ul><li><a name="Scala"></a>Scala</li></ul><pre class="prettyprint"><code>import java.lang.Math._<br><br>def max(visits: List[List[Int]], time: Int) = {<br>    ((0 /: visits(0)) {(num, t) =&gt; if(time &gt; t) num + 1 else num} <br>        /: visits(1)) {(num, t) =&gt; if(time &gt; t) num - 1 else num}<br>}<br><br>val GUESTS = 30<br>val starts = for(i &lt;- 0 until GUESTS) yield (random * 24).toInt<br>val ends = for(start &lt;- starts) yield <br>               (random * (24 - start) + start).toInt<br><br>val visits = List(starts.sortWith(_ &gt; _).toList, ends.sortWith(_ &gt; _).toList)<br>for(<br>    t &lt;- 0 until 24;<br>    num = max(visits, t)<br>    if num != 0<br>) { printf("%2d 時訪客：%2d 位%n", t, num) }<br></code></pre><br>
      <ul>
        <li><a name="Ruby"></a>Ruby</li>
      </ul>
      <pre class="prettyprint"><code>#encoding: Big5<br>def max(visits, time)<br>    visits[1].reduce(<br>        visits[0].reduce(0) {|num, t| time &gt; t ? num + 1 : num }<br>    ) {|num, t| time &gt; t ? num - 1 : num}<br>end<br>        <br>GUESTS = 30<br>starts = (0...GUESTS).map {(rand * 24).to_i}<br>ends = starts.map {|start| (rand * (24 - start) + start).to_i}<br><br>visits = [starts.sort, ends.sort]<br>(0...24).each do |t|<br>    num = max(visits, t)<br>    if num != 0<br>        printf("%2d 時訪客：%2d 位\n", t, num)<br>    end<br>end<br></code></pre>
      <br>
      <ul>
        <li><a name="JavaScript"></a>JavaScript</li>
      </ul>
      <pre class="prettyprint"><code>function max(visits, time) {<br>    var num = 0;<br>    for(var t = 0; t &lt; visits[0].length; t++) {<br>        num = time &gt; visits[0][t] ? num + 1 : num;<br>        num = time &gt; visits[1][t] ? num - 1 : num;<br>    }<br>    return num;<br>}<br><br>var GUESTS = 30;<br>var visits = [[], []];<br>for(var i = 0; i &lt; GUESTS; i++) {<br>    visits[0][i] = parseInt(Math.random() * 24);<br>    visits[1][i] = parseInt(Math.random() * <br>                     (24 - visits[0][i]) + visits[0][i]);<br>}<br>var result = '';<br>for(var t = 0; t &lt; 24; t++) {<br>    num = max(visits, t);<br>    if(num != 0) { result += (t + '時訪客：' + num + '位\n'); }<br>}<br>print(result);<br></code></pre>

      <br>
      <ul>
        <li><a name="Haskell"></a>Haskell</li>
      </ul>
      <pre class="prettyprint"><code>import System.Random<br>import Control.Monad<br>import Text.Printf<br><br>rand gen n= take n \$ randomRs (0.0, 1.0) gen::[Float]<br><br>maxV visits time = foldl (count (-))<br>    (foldl (count (+)) 0 (visits !! 0)) (visits !! 1)<br>    where count op num t = if time &gt; t then num `op` 1 else num<br><br>main = do<br>    gen1 &lt;- getStdGen<br>    gen2 &lt;- newStdGen<br>    let guests = 30<br>        starts = map (truncate . (* 24)) (rand gen1 guests)<br>        rs = (rand gen1 guests)<br>        ends = [truncate ((rs !! i) * fromIntegral(<br>            24 - (starts !! i))) + (starts !! i)| i &lt;- [0..guests - 1]]<br>        visits = [starts, ends]<br>    print visits<br>    forM [0..23] (\t -&gt; do<br>        let num = maxV visits t<br>        printf "%2d has %2d guests\n" (t::Int) (num::Int))<br></code></pre>
<br>


<br><br><div class="ad336-280" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div><br><div class="recommend" style="text-align: center;"><hr><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="4953478487" data-ad-format="autorelaxed"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></article></main></div></body>
<script src="../js/ui.js"></script>
</html>
<div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
