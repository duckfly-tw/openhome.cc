<!doctype html><html lang="zh-tw">
<head><meta http-equiv="refresh" content="0; URL=https://openhome.cc/Gossip/AlgorithmGossip/'https://openhome.cc/zh-tw/algorithm/search/linear/'">
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="說明

      

搜尋的目的，是在「已排序的資料」中尋找指定的資料，而當中循序搜尋是最基本的搜尋法，只要從資料開頭尋找到最後，看看是否找到資料即可。



      
   ...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="循序搜尋法（使用衛兵）">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/AlgorithmGossip/LinearSearch.htm">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="說明

      

搜尋的目的，是在「已排序的資料」中尋找指定的資料，而當中循序搜尋是最基本的搜尋法，只要從資料開頭尋找到最後，看看是否找到資料即可。



      
   ...">


    <title>循序搜尋法（使用衛兵）</title>

<link rel="stylesheet" href="../css/pure-0.6.0/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="../css/layouts/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="../css/caterpillar.css">
     <script async src="../google-code-prettify/run_prettify.js"></script>
<!-- 網頁層級廣告 --><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="LinearSearch.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span>
        
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="index.html">回 Algorithm</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="../images/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="../images/facebook.png"></a> </div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div><br><div class="ad" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-9750319131714390"
     data-ad-slot="3747048883"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div></li>
            </ul>
        </div>
    </div>

    <main id="main">
        <header class="header">
            <h1>循序搜尋法（使用衛兵）</h1>
        </header>

        <article class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
             





      
      <h2>說明</h2>

      

搜尋的目的，是在「已排序的資料」中尋找指定的資料，而當中循序搜尋是最基本的搜尋法，只要從資料開頭尋找到最後，看看是否找到資料即可。<br>



      
      <h2>解法</h2>

      

初學者看到循序搜尋，多數都會使用以下的方式來進行搜尋：<br>

      

      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">while(i &lt; MAX) { </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; if(number[i] == k) { </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("找到指定值"); </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; } </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; i++; </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">} </span><br>



      </div>

      

&nbsp;<br>

      <br>



這個方法基本上沒有錯，但是可以加以改善，可以利用設定衛兵的方式，省去if判斷式，衛兵通常設定在數列最後或是最前方，假設設定在列前方好了（索引0的
位置），我們從數列後方向前找，如果找到指定的資料時，其索引值不是0，表示在數列走訪完之前就找到了，在程式的撰寫上，只要使用一個while迴圈就可
以了。<br>

      <br>



下面的程式為了配合衛兵的設置，自行使用快速排序法先將產生的數列排序，然後才進行搜尋，若只是數字的話，通常您可以使用程式語言函式庫所提供的搜尋函式。 



      <br>



      
      <h2> 實作：<a href="LinearSearch.htm#C">C</a>&nbsp;&nbsp; &nbsp;<a href="LinearSearch.htm#Java">Java</a>&nbsp;&nbsp; &nbsp;<a href="LinearSearch.htm#Python">Python</a>&nbsp;&nbsp; &nbsp;<a href="LinearSearch.htm#Scala">Scala</a>&nbsp;&nbsp;&nbsp; <a href="LinearSearch.htm#Scala"></a><a href="LinearSearch.htm#Ruby">Ruby</a><br>
      </h2>




      
      <ul>

        <li><a name="C"></a> C
  </li>

      
      </ul>




      
      <pre class="prettyprint"><code>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br>#include &lt;time.h&gt; <br>#define MAX 10 <br>#define SWAP(x,y) {int t; t = x; x = y; y = t;} <br><br>int search(int[]); <br>int partition(int[], int, int); <br>void quickSort(int[], int, int); <br><br>int main(void) { <br>    srand(time(NULL)); <br>    <br>    int number[MAX+1] = {0};    <br><br>    int i;<br>    for(i = 1; i &lt;= MAX; i++) <br>        number[i] = rand() % 100; <br><br>    quickSort(number, 1, MAX); <br><br>    printf("數列："); <br>    for(i = 1; i &lt;= MAX; i++) <br>        printf("%d ", number[i]); <br>    <br>    printf("\n輸入搜尋值："); <br>    scanf("%d", &amp;number[0]); <br><br>    int find = search(number);<br>    if(find &gt;= 0) <br>        printf("\n找到數值於索引 %d ", find); <br>    else <br>        printf("\n找不到數值"); <br><br>    printf("\n"); <br><br>    return 0; <br>} <br><br>int search(int number[]) { <br>    int i = MAX; <br>    while(number[i] != number[0]) i--; <br>    return i; <br>} <br><br>int partition(int number[], int left, int right) { <br>    int s = number[right]; <br>    int i = left - 1; <br><br>    int j;<br>    for(j = left; j &lt; right; j++) { <br>        if(number[j] &lt;= s) { <br>            i++; <br>            SWAP(number[i], number[j]); <br>        } <br>    } <br><br>    SWAP(number[i+1], number[right]); <br>    return i+1; <br>} <br><br>void quickSort(int number[], int left, int right) { <br>    if(left &lt; right) { <br>        int q = partition(number, left, right); <br>        quickSort(number, left, q-1); <br>        quickSort(number, q+1, right); <br>    } <br>} <br></code></pre>




      <br>




      
      <ul>

        <li> <a name="Java"></a>Java
  </li>

      
      </ul>




      
      <pre class="prettyprint"><code>public class Search {<br>    public static int linear(int[] number, int des) {<br>        int[] tmp = new int[number.length + 1];<br>        for(int i = 1; i &lt; tmp.length; i++) {<br>            tmp[i] = number[i-1];  <br>        }<br>        <br>        tmp[0] = des;<br>        <br>        int i = number.length; <br>        while(tmp[i] != tmp[0]) <br>            i--; <br><br>        return i - 1;    <br>    }<br>    <br>    public static void main(String[] args) {<br>        int[] number = {1, 2, 3, 4, 6, 7, 8};<br>        int find = Search.linear(number, 3);<br>        System.out.println(find &gt;= 0 ? "找到數值於索引" + find : "找不到數值"); <br>    }<br>} <br></code></pre><br><ul><li><a name="Python"></a>Python</li></ul><pre class="prettyprint"><code>def search(number, des):<br>    tmp = [0] * (len(number) + 1)<br>    for i in range(1, len(number)):<br>        tmp[i] = number[i - 1]<br>    tmp[0] = des<br>    i = len(number)<br>    while tmp[i] != tmp[0]:<br>        i -= 1<br>    return i - 1<br><br>number = [1, 4, 2, 6, 7, 3, 9, 8]<br>number.sort()<br>find = search(number, 2)<br>print("找到數值於索引 " + str(find) if find &gt;= 0 else "找不到數值")</code></pre><br><ul><li><a name="Scala"></a>Scala</li></ul><pre class="prettyprint"><code>object Search {<br>    def linear(number: Array[Int], des: Int): Int = {<br>        val tmp = new Array[Int](number.length + 1)<br>        for(i &lt;- 1 until tmp.length) {<br>            tmp(i) = number(i - 1)<br>        }<br>        tmp(0) = des<br>        for(i &lt;- number.length until (0, -1) if tmp(i) == des) {<br>            return i -1<br>        }<br>        return -1<br>    }<br>}<br><br>val number = Array(1, 2, 3, 4, 6, 7, 8)<br>val find = Search.linear(number, 3)<br>println(if(find &gt;= 0) "找到數值於索引 " + find else "找不到數值")</code></pre><br>
      <ul>
        <li><a name="Ruby"></a>Ruby</li>
      </ul>
      <pre class="prettyprint"><code># encoding: Big5<br>def search(number, des)<br>    tmp = Array.new(number.length + 1, 0)<br>    1.upto(number.length  - 1) { |i|<br>        tmp[i] = number[i - 1]<br>    }<br>    tmp[0] = des<br>    i = number.length<br>    while tmp[i] != tmp[0]<br>        i -= 1<br>    end<br>    i - 1<br>end<br><br>number = [1, 4, 2, 6, 7, 3, 9, 8]<br>number.sort!<br>find = search(number, 2)<br>print find &gt;= 0 ? "找到數值於索引 " + find.to_s : "找不到數值", "\n"<br></code></pre>
<br>


 

<br><br><div class="ad336-280" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div><br><div class="recommend" style="text-align: center;"><hr><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="4953478487" data-ad-format="autorelaxed"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></article></main></div></body>
<script src="../js/ui.js"></script>
</html>
<div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
