<!doctype html><html lang="zh-tw">
<head><meta http-equiv="refresh" content="0; URL=https://openhome.cc/Gossip/AlgorithmGossip/'https://openhome.cc/zh-tw/algorithm/matrix/triangle-symmetric/'">
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="說明

      

上三角矩陣是矩陣在對角線以下的元素均為0，即Aij = 0，i &gt; j，例如：

      

      
      1&nbsp;&nbsp; ...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="上三角、下三角、對稱矩陣">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/AlgorithmGossip/TriangleArray.htm">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="說明

      

上三角矩陣是矩陣在對角線以下的元素均為0，即Aij = 0，i &gt; j，例如：

      

      
      1&nbsp;&nbsp; ...">


    <title>上三角、下三角、對稱矩陣</title>

<link rel="stylesheet" href="../css/pure-0.6.0/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="../css/layouts/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="../css/caterpillar.css">
     <script async src="../google-code-prettify/run_prettify.js"></script>
<!-- 網頁層級廣告 --><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="TriangleArray.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span>
        
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="index.html">回 Algorithm</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="../images/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="../images/facebook.png"></a> </div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div><br><div class="ad" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-9750319131714390"
     data-ad-slot="3747048883"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div></li>
            </ul>
        </div>
    </div>

    <main id="main">
        <header class="header">
            <h1>上三角、下三角、對稱矩陣</h1>
        </header>

        <article class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
             





      
      <h2>說明</h2>

      

上三角矩陣是矩陣在對角線以下的元素均為0，即A<sub>ij</sub> = 0，i &gt; j，例如：<br>

      

      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">1&nbsp;&nbsp; 2&nbsp;&nbsp; 3&nbsp;&nbsp; &nbsp; 4&nbsp;&nbsp;&nbsp; 5 </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">0&nbsp;&nbsp; 6&nbsp;&nbsp; 7&nbsp;&nbsp; &nbsp; 8&nbsp;&nbsp;&nbsp; 9 </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">0&nbsp;&nbsp; 0&nbsp;&nbsp; 10 &nbsp;&nbsp; 11&nbsp; &nbsp;12 </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">0&nbsp;&nbsp; 0&nbsp;&nbsp; 0&nbsp;&nbsp; &nbsp; 13&nbsp; &nbsp;14 </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">0&nbsp;&nbsp; 0&nbsp;&nbsp; 0&nbsp; &nbsp;&nbsp; 0&nbsp; &nbsp; 15</span><br>



      </div>



      <br>



下三角矩陣是矩陣在對角線以上的元素均為0，即A<sub>ij </sub>= 0，i &lt; j，例如：<br>

      

      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;1&nbsp;&nbsp; 0&nbsp;&nbsp; 0&nbsp;&nbsp; 0&nbsp;&nbsp; 0 </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;2&nbsp;&nbsp; 6&nbsp;&nbsp; 0&nbsp;&nbsp; 0&nbsp;&nbsp; 0 </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;3&nbsp;&nbsp; 7&nbsp;&nbsp; 10&nbsp; 0&nbsp;&nbsp; 0 </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;4&nbsp;&nbsp; 8&nbsp;&nbsp; 11&nbsp; 13&nbsp; 0 </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;5&nbsp;&nbsp; 9&nbsp;&nbsp; 12&nbsp; 14&nbsp; 15 </span><br>



      </div>



      <br>



對稱矩陣是矩陣元素對稱於對角線，例如：<br>

      

      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;1&nbsp;&nbsp; 2&nbsp;&nbsp; 3&nbsp;&nbsp; 4&nbsp;&nbsp; 5 </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;2&nbsp;&nbsp; 6&nbsp;&nbsp; 7&nbsp;&nbsp; 8&nbsp;&nbsp; 9 </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;3&nbsp;&nbsp; 7&nbsp;&nbsp; 10&nbsp; 11&nbsp; 12 </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;4&nbsp;&nbsp; 8&nbsp;&nbsp; 11&nbsp; 13&nbsp; 14 </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;5&nbsp;&nbsp; 9&nbsp;&nbsp; 12&nbsp; 14&nbsp; 15 </span><br>



      </div>



      <br>



上三角或下三角矩陣也有大部份的元素不儲存值（為0），我們可以將它們使用一維陣列來儲存以節省儲存空間，而對稱矩陣因為對稱於對角線，所以可以視為上三角或下三角矩陣來儲存。<br>



      
      <h2>解法</h2>

      

假設矩陣為nxn，為了計算方便，我們讓陣列索引由1開始，上三角矩陣化為一維陣列，若以列為主，其公式為：<br>

      

      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">loc = n*(i-1) - i*(i-1)/2 + j</span><br>



      </div>



      <br>



化為以行為主，其公式為：<br>

      

      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">loc = j*(j-1)/2 + i</span><br>



      </div>



      <br>



下三角矩陣化為一維陣列，若以列為主，其公式為：<br>

      

      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">loc = i*(i-1)/2 + j</span><br>



      </div>



      <br>



若以行為主，其公式為：<br>

      

      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">loc = n*(j-1) - j*(j-1)/2 + i</span><br>



      </div>



      <br>



公式的導證其實是由等差級數公式得到，您可以自行繪圖並看看就可以導證出來，對於C/C++或Java等索引由0開始的語言來說，只要將i與j各加1，求得loc之後減1即可套用以上的公式。 <br>




      <br>



      
      <h2> 實作：<a href="TriangleArray.htm#C">C</a>&nbsp;&nbsp; &nbsp;<a href="TriangleArray.htm#Java">Java</a>&nbsp;&nbsp; &nbsp;<a href="TriangleArray.htm#Python">Python</a>&nbsp;&nbsp; &nbsp;<a href="TriangleArray.htm#Scala">Scala</a>&nbsp;&nbsp;&nbsp; <a href="TriangleArray.htm#Scala"><a href="TriangleArray.htm#Ruby">Ruby</a><br>
      </a></h2>




      
      <ul>

        <li><a name="C"></a> C
  </li>

      
      </ul>




      
      <pre class="prettyprint"><code>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br>#define N 5 <br><br><br>int main(void) { <br>    int arr1[N][N] = { <br>        {1, 2, 3,  4,   5}, <br>        {0, 6, 7,  8,   9}, <br>        {0, 0, 10, 11, 12}, <br>        {0, 0, 0,  13, 14}, <br>        {0, 0, 0,  0,  15}}; <br><br>    int arr2[N*(1+N)/2] = {0}; <br><br>    int i, j, loc = 0; <br><br>    printf("\n以列為主："); <br>    for(i = 0; i &lt; N; i++) { <br>        for(j = 0; j &lt; N; j++) { <br>            if(arr1[i][j] != 0) <br>                arr2[loc++] = arr1[i][j]; <br>        } <br>    } <br>    for(i = 0; i &lt; N*(1+N)/2; i++) <br>        printf("%d ", arr2[i]); <br><br>    printf("\n輸入索引(i, j)："); <br>    scanf("%d, %d", &amp;i, &amp;j); <br>    loc = N*i - i*(i+1)/2 + j; <br>    printf("(%d, %d) = %d", i, j, arr2[loc]); <br><br>    printf("\n"); <br><br>    return 0; <br>} <br></code></pre>




      <br>




      
      <ul>

        <li><a name="Java"></a> Java
  </li>

      
      </ul>




      
      <pre class="prettyprint"><code>import java.util.*;<br><br>public class TriangleArray {<br>    private List&lt;Integer&gt; list;<br>    private int length;<br>    <br>    public TriangleArray(int[][] array) {<br>        length = array.length;<br>        list = new ArrayList&lt;Integer&gt;(length * (1 + length) / 2);<br>        for(int i = 0; i &lt; length; i++) { <br>            for(int j = 0; j &lt; length; j++) { <br>                if(array[i][j] != 0) <br>                    list.add(array[i][j]);<br>            } <br>        }<br>    }<br>    <br>    public int get(int i, int j) {<br>        return list.get(length * i - i * (i + 1) / 2 + j);<br>    }<br><br>    public static void main(String[] args) {<br>        int[][] array = {{1, 2, 3,  4,   5}, <br>                         {0, 6, 7,  8,   9}, <br>                         {0, 0, 10, 11, 12}, <br>                         {0, 0, 0,  13, 14}, <br>                         {0, 0, 0,  0,  15}};<br>        <br>        TriangleArray triangleArray = new TriangleArray(array);<br>        System.out.print(triangleArray.get(2, 2));<br>    }<br>}<br></code></pre><br><ul><li><a name="Python"></a>Python</li></ul><pre class="prettyprint"><code>class TriangleArray:<br>    def __init__(self, array):<br>        self.__length = len(array)<br>        self.__list = []<br>        for i in range(self.__length):<br>            for j in range(self.__length):<br>                if array[i][j] != 0:<br>                    self.__list.append(array[i][j])<br>    def get(self, i, j):<br>        return self.__list[self.__length * i - i * (i + 1) // 2 + j]<br><br>array = [ <br>            [1, 2, 3,  4,   5], <br>            [0, 6, 7,  8,   9], <br>            [0, 0, 10, 11, 12], <br>            [0, 0, 0,  13, 14], <br>            [0, 0, 0,  0,  15]<br>        ]<br><br>triangleArray = TriangleArray(array)<br>print(triangleArray.get(2, 2))</code></pre><br><ul><li><a name="Scala"></a>Scala</li></ul><pre class="prettyprint"><code>class TriangleArray(array: Array[Array[Int]]) {<br>    val length = array.length;<br>    val arr = (for(i &lt;- 0 until length; j &lt;- 0 until length<br>                   if array(i)(j) != 0<br>               ) yield array(i)(j)).toArray<br>               <br>    def get(i: Int, j: Int) = {<br>        arr(length * i - i * (i + 1) / 2 + j)<br>    }<br>}<br><br>val array = Array(<br>               Array(1, 2, 3,  4,   5), <br>               Array(0, 6, 7,  8,   9), <br>               Array(0, 0, 10, 11, 12), <br>               Array(0, 0, 0,  13, 14), <br>               Array(0, 0, 0,  0,  15)<br>            )<br>val triangleArray = new TriangleArray(array)<br>print(triangleArray.get(2, 2))</code></pre><br>
      <ul>
        <li><a name="Ruby"></a>Ruby</li>
      </ul>
      <pre class="prettyprint"><code>class TriangleArray<br>    def initialize(array)<br>        @length = array.length<br>        @list = []<br>        @length.times { |i|<br>            @length.times { |j|<br>                if array[i][j] != 0<br>                    @list &lt;&lt; array[i][j]<br>                end<br>            }<br>        }<br>    end<br>    def get(i, j)<br>        @list[@length * i - i * (i + 1) / 2 + j]<br>    end<br>end<br><br><br>array = [ <br>            [1, 2, 3,  4,   5], <br>            [0, 6, 7,  8,   9], <br>            [0, 0, 10, 11, 12], <br>            [0, 0, 0,  13, 14], <br>            [0, 0, 0,  0,  15]<br>        ]<br><br>triangleArray = TriangleArray.new(array)<br>puts triangleArray.get(2, 2)<br></code></pre>
<br>


 

<br><br><div class="ad-2" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></article></main></div></body>
<script src="../js/ui.js"></script>
</html>
<div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
