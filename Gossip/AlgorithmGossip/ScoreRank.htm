<!doctype html><html lang="zh-tw">
<head><meta http-equiv="refresh" content="0; URL=https://openhome.cc/Gossip/AlgorithmGossip/'https://openhome.cc/zh-tw/algorithm/basics/rank/'">
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="說明

      

假設有教師依學生座號輸入分數，希望在輸入完畢後顯示學生分數的排行，當然學生的分數可能相同。



      
      解法

      

這...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="得分排行">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/AlgorithmGossip/ScoreRank.htm">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="說明

      

假設有教師依學生座號輸入分數，希望在輸入完畢後顯示學生分數的排行，當然學生的分數可能相同。



      
      解法

      

這...">


    <title>得分排行</title>

<link rel="stylesheet" href="../css/pure-0.6.0/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="../css/layouts/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="../css/caterpillar.css">
     <script async src="../google-code-prettify/run_prettify.js"></script>
<!-- 網頁層級廣告 --><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="ScoreRank.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span>
        
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="index.html">回 Algorithm</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="../images/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="../images/facebook.png"></a> </div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div><br><div class="ad" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-9750319131714390"
     data-ad-slot="3747048883"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div></li>
            </ul>
        </div>
    </div>

    <main id="main">
        <header class="header">
            <h1>得分排行</h1>
        </header>

        <article class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
             
      
      <h2>說明</h2>

      

假設有教師依學生座號輸入分數，希望在輸入完畢後顯示學生分數的排行，當然學生的分數可能相同。<br>



      
      <h2>解法</h2>

      

這個問題基本上要解不難，只要使用額外的一個排行陣列走訪分數陣列就可以了，直接使用下面的程式片段作說明：<br>

      

      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">for(i = 0; i &lt; count; i++) { </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; juni[i] = 1; </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; for(j = 0; j &lt; count; j++) </span><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">if(score[j] &gt; score[i]) {</span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; juni[i]++; </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; } </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">} </span><br>



      <br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">printf("得分\t排行\n"); </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">for(i = 0; i &lt; count; i++) </span><br>



      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp; printf("%d\t%d\n", score[i], juni[i]); </span><br>



      </div>



      <br>



&nbsp;<br>



上面這個方法雖然簡單，但是反覆計算的次數是n<sup>2</sup>，如果n值變大，那麼運算的時間就會拖長；改變juni陣列的長度為n + 2，並將初始值設定為0，如下所示： <br>




      
      <div style="text-align: center;"><div class="pure-g"><div class="pure-u-1"><img class="pure-img-responsive" alt="得分排行" title="得分排行" src="images/scoreRank-1.jpg" /></div></div></div>



      <br>

      


接下來走訪分數陣列，並在分數所對應的排行陣列索引元素上加1，如下所示：<br>



      
      <div style="text-align: center;"><div class="pure-g"><div class="pure-u-1"><img class="pure-img-responsive" alt="得分排行" title="得分排行" src="images/scoreRank-2.jpg" /></div></div></div>



      <br>

      

將排行陣列最右邊的元素設定為1，然後依序將右邊的元素值加至左邊一個元素，最後排行陣列中的「分數 + 1」」就是得該分數的排行，如下所示： <br>



      
      <div style="text-align: center;"><div class="pure-g"><div class="pure-u-1"><img class="pure-img-responsive" alt="得分排行" title="得分排行" src="images/scoreRank-3.jpg" /></div></div></div>

      

這樣的方式看起來複雜，其實不過在計算某分數之前排行的人數，假設89分以上的人數為x人，則89分自然就是x+1了，這也是為什麼排行陣列最右邊要設定為1的原因；如果89分有y人，則88分自然就是x+y+1，整個陣列右邊元素向左加的原因正是如此。<br>

      <br>



如果分數有負分的情況，必須加上一個偏移值，將所有的分數先往右偏移一個範圍即可，最後顯示的時候記得減回偏移值就可以了。 

      <br>



      <br>



      
      <h2> 實作：<a href="ScoreRank.htm#C">C</a>&nbsp;&nbsp; &nbsp;<a href="ScoreRank.htm#Java">Java</a>&nbsp;&nbsp; &nbsp;<a href="ScoreRank.htm#Python">Python</a>&nbsp;&nbsp; &nbsp;<a href="ScoreRank.htm#Scala">Scala&nbsp;</a>&nbsp;&nbsp; <a href="ScoreRank.htm#Ruby">Ruby</a>&nbsp;&nbsp;&nbsp; <a href="ScoreRank.htm#JavaScript">JavaScript</a>&nbsp;&nbsp;&nbsp; <a href="ScoreRank.htm#Haskell">Haskell</a><br>
      </h2>




      
      <ul>

        <li><a name="C"></a> C </li>

      
      </ul>




      
      <pre class="prettyprint"><code>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt;<br>#define LEN 10<br>#define MAX 100 <br>#define MIN 0 <br><br>void count(int*, int*, int);<br>void aggregate(int*);<br>void print(int*, int*, int);<br><br>int main(void) { <br>    int scores[LEN] = {100, 99, 99, 97, 88, 83, 99, 74, 78, 89}; <br>    int juni[MAX + 2] = {0};<br>    <br>    count(scores, juni, LEN);<br>    aggregate(juni);<br>    print(scores, juni, LEN);<br><br>    return 0; <br>} <br><br>void count(int* scores, int* juni, int length) {<br>    int i;<br>    for(i = 0; i &lt; length; i++) {<br>        juni[scores[i]]++; <br>    }<br>    juni[MAX + 1] = 1;<br>}<br><br>void aggregate(int* juni) {<br>    int i;<br>    for(i = MAX; i &gt;= MIN; i--) {<br>        juni[i] = juni[i] + juni[i + 1]; <br>    }<br>}<br><br>void print(int* scores, int* juni, int length) {<br>    printf("得分\t排行\n"); <br>    int i;<br>    for(i = 0; i &lt; LEN; i++) {<br>        printf("%d\t%d\n", scores[i], juni[scores[i]+1]); <br>    }     <br>}<br></code></pre>




      <br>




      
      <ul>

        <li><a name="Java"></a> Java </li>

      
      </ul>




      
      <pre class="prettyprint"><code>import java.util.*;<br><br>public class Rank {<br>    public static Map&lt;Integer, Integer&gt; juni(int[] scores) {<br>        Map&lt;Integer, Integer&gt; juni = <br>            new TreeMap&lt;&gt;((Integer i1, Integer i2) -&gt; -i1.compareTo(i2));<br>        for(int score : scores) {<br>            juni.put(score, <br>                juni.get(score) == null ? 1 : juni.get(score) + 1);<br>        }<br>        return juni;<br>    }<br>    <br>    public static Map&lt;Integer, Integer&gt; aggr(Map&lt;Integer, Integer&gt; juni) {<br>        Map&lt;Integer, Integer&gt; rank = new HashMap&lt;&gt;();<br>        Integer acct = 1;<br>        for(Integer score : juni.keySet()) {<br>            rank.put(score, acct);<br>            acct += juni.get(score);<br>        }<br>        return rank;<br>    }<br>    <br>    public static Map&lt;Integer, Integer&gt; rank(int[] scores) {<br>        return aggr(juni(scores));<br>    }<br><br>    public static void main(String[] args) {<br>        int[] scores = {100, 99, 99, 97, 88, 83, 99, 74, 78, 89};<br>        Map&lt;Integer, Integer&gt; rank = rank(scores);<br>        for(int score :scores) {<br>            System.out.printf("%d\t%d%n", score, rank.get(score));<br>        }<br>    }<br>}<br></code></pre><br><ul><li><a name="Python"></a>Python</li></ul><pre class="prettyprint"><code>from functools import reduce<br><br>def updated(org, dt):<br>    keys = set(org.keys()) | set(dt.keys())<br>    return dict((key, dt.get(key, org.get(key))) for key in keys)<br>    <br>def rank(scores):<br>    juni = reduce(<br>        lambda acct, score: updated(acct, {score : acct.get(score, 0) + 1}), <br>        scores, {})<br><br>    sortedKeys = list(reversed(sorted(juni.keys())))<br><br>    at = reduce(<br>        lambda acct, score: acct + [acct[-1] + juni[score]], <br>        sortedKeys, [1])<br><br>    return dict(zip(sortedKeys, at))<br>    <br>scores = [100, 99, 99, 97, 88, 83, 99, 74, 78, 89]<br>rankDict = rank(scores)<br>for score in scores:<br>    print('%d\t%d' % (score, rankDict[score]))</code></pre><br><ul><li><a name="Scala"></a>Scala</li></ul><pre class="prettyprint"><code>def rank(scores: List[Int]) = {<br>    val juni = (Map[Int, Int]() /: scores)(<br>      (acct, score) =&gt; acct ++ Map(score -&gt; (acct.getOrElse(score, 0) + 1)))<br>    val sortedKeys = juni.keys.toList.sortWith(_ &lt; _)<br>    val at = (sortedKeys :\ List(1))(<br>      (score, acct) =&gt; (acct.head + juni(score)) :: acct)<br>    sortedKeys.zip(at.tail).toMap<br>}<br><br>val scores = List(100, 99, 99, 97, 88, 83, 99, 74, 78, 89)<br>val rankDict = rank(scores)<br>scores.foreach(score =&gt; println("%d\t%d".format(score, rankDict(score))))</code></pre><br>
      <ul>
        <li><a name="Ruby"></a>Ruby</li>
      </ul>
      <pre class="prettyprint"><code>def rank(scores)<br>    juni = scores.reduce({}) {|acct, score| <br>        acct.merge(score =&gt; acct.fetch(score, 0) + 1)}<br>    sortedKeys = juni.keys.sort.reverse<br>    at = sortedKeys.reduce([1]){|acct, score| <br>        acct + [acct[-1] + juni[score]]}<br>    Hash[sortedKeys.zip(at)]<br>end<br><br>scores = [100, 99, 99, 97, 88, 83, 99, 74, 78, 89]<br>rankDict = rank(scores)<br>scores.each do |score|<br>    print "#{score}\t#{rankDict[score]}\n"<br>end<br></code></pre>
      <br>
      <ul>
        <li><a name="JavaScript"></a>JavaScript</li>
      </ul>
      <pre class="prettyprint"><code>Object.prototype.getOrElse = function(key, elseValue) {<br>    return this[key] ? this[key] : elseValue;<br>};<br><br>Object.prototype.sortedKeys = function(f) {<br>    var keys = [];<br>    for(var key in this) if(this.hasOwnProperty(key)) { keys.push(key); }<br>    return keys.sort(f);    <br>};<br><br>Array.prototype.reduce = function(init, f) {<br>    var value = init;<br>    for(var i = 0; i &lt; this.length; i++) { value = f(value, this[i]); }<br>    return value;<br>};<br><br>Array.prototype.getLast = function() { return this[this.length - 1]; };<br><br>Array.prototype.zip = function(arr) {<br>    var zipped = [];<br>    for(var i = 0; i &lt; this.length; i++) { zipped.push([this[i], arr[i]]); }<br>    return zipped;<br>};<br><br>Object.fromArray = function(arr) {<br>    var obj = {};<br>    for(var i = 0; i &lt; arr.length; i++) { obj[arr[i][0]] = arr[i][1]; }<br>    return obj;<br>};<br><br>function rank(scores) {<br>    var juni = scores.reduce({}, function(acct, score) {<br>        acct[score] = acct.getOrElse(score, 0) + 1;<br>        return acct;<br>    });<br>    var sortedScores = juni.sortedKeys(function(v1, v2) { return v2 - v1; });<br>    var at = sortedScores.reduce([1], function(acct, score) {<br>        acct.push(acct.getLast() + juni[score]);<br>        return acct;<br>    });<br>    return Object.fromArray(sortedScores.zip(at));<br>}<br><br>var scores = [100, 99, 99, 97, 88, 83, 99, 74, 78, 89];<br>var rankObj = rank(scores);<br>scores.forEach(function(score) { print(score + " : " + rankObj[score]); });<br></code></pre>
      <br>
      <ul>
        <li><a name="Haskell"></a>Haskell</li>
      </ul>
      <pre class="prettyprint"><code>import qualified Data.Map as Map<br><br>get key m = v<br>    where Just v = Map.lookup key m<br>   <br>getOrElse org elseV = case org of Just v  -&gt; v<br>                                  Nothing -&gt; elseV<br><br>rank scores = Map.fromList \$ zip sortedKeys \$ tail at<br>    where <br>        juni = foldl (\acct score -&gt; <br>            Map.insert score (getOrElse (Map.lookup score acct) 0 + 1) acct) <br>            Map.empty scores<br>        sortedKeys = Map.keys juni<br>        at = foldr (\score acct -&gt; <br>            ((head acct) + (get score juni)) : acct) [1] sortedKeys<br>        <br>main = sequence [putStrLn <br>    (show score ++ " : " ++ show (get score rankMap)) | score &lt;- scores]<br>    where scores = [100, 99, 99, 97, 88, 83, 99, 74, 78, 89]<br>          rankMap = rank scores<br></code></pre>
      <br>





<br><br><div class="ad-2" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></article></main></div></body>
<script src="../js/ui.js"></script>
</html>
<div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
