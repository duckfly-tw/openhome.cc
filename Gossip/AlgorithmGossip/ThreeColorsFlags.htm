<!DOCTYPE html>
<html lang="zh-tw">
  <head><meta http-equiv="refresh" content="0; URL=https://openhome.cc/Gossip/AlgorithmGossip/'https://openhome.cc/zh-tw/algorithm/basics/tricolor/'">
    <meta content="text/html; charset=utf-8" http-equiv="content-type">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="&nbsp;說明
      三色旗的問題最早由E.W.Dijkstra所提出，他所使用的用語為Dutch Nation Flag(Dijkstra為荷蘭人)，而多數的作者則使用Thre...">
    <meta property="og:locale" content="zh_TW">
    <meta property="og:title" content="三色旗">
    <meta property="og:type" content="article">
    <meta property="og:url" content="https://openhome.cc/Gossip/AlgorithmGossip/ThreeColorsFlags.htm">
    <meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
    <meta property="og:site_name" content="OPENHOME.CC">
    <meta property="og:description" content="&nbsp;說明
      三色旗的問題最早由E.W.Dijkstra所提出，他所使用的用語為Dutch Nation Flag(Dijkstra為荷蘭人)，而多數的作者則使用Thre...">
    <title>三色旗</title>
    <link rel="stylesheet" href="../css/pure-0.6.0/pure-min.css">
    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">    <![endif]-->
    <!--[if gt IE 8]><!-->
    <link rel="stylesheet" href="../css/layouts/side-menu.css">
    <!--<![endif]-->
    <link rel="stylesheet" href="../css/caterpillar.css">
    <script async="" src="../google-code-prettify/run_prettify.js"></script>
  <!-- 網頁層級廣告 --><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script></head>
  <body>
    <div id="layout">
      <!-- Menu toggle --> <a href="ThreeColorsFlags.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span> </a>
      <div id="menu">
        <div class="pure-menu"> <a class="pure-menu-heading" href="index.html">回
            Algorithm</a>
          <ul class="pure-menu-list">
            <br>
            <div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img
                  title="Twitter" alt="Twitter" src="../images/twitter.png"></a>
              <a href="http://www.facebook.com/openhome.cc"><img title="Facebook"
                  alt="Facebook" src="../images/facebook.png"></a>
              </div>
            <br>
            <div id="search box">
              <script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div>
            <br>
            <div class="ad" style="text-align: center;">
              <script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
              <!-- 2015 新版型 160 x 600 廣告 --> <ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px"
                data-ad-client="ca-pub-9750319131714390" data-ad-slot="3747048883"></ins>
              <script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
          </ul>
        </div>
      </div>
      <main id="main">
        <header class="header">
          <h1>三色旗</h1>
        </header>
        <article class="content"><br>
          <div class="ad-3" style="text-align: center;">
            <script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins
              class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390"
              data-ad-slot="7104125683" data-ad-format="auto"></ins>
            <script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div>
          <h2>&nbsp;說明</h2>
          三色旗的問題最早由E.W.Dijkstra所提出，他所使用的用語為Dutch Nation
          Flag(Dijkstra為荷蘭人)，而多數的作者則使用Three-Color Flag來稱之。<br>
          <br>
          假設有一條繩子，上面有紅、白、藍三種顏色的旗子，起初繩子上的旗子顏色並沒有順序，您希望將之分類，並排列為藍、白、紅的順序，要如何移動次數才會
          最少，注意您只能在繩子上進行這個動作，而且一次只能調換兩個旗子。 <br>
          <h2>解法</h2>
          在一條繩子上移動，在程式中也就意味只能使用一個陣列，而不使用其它的陣列來作輔助，問題的解法很簡單，您可以自己想像一下在移動旗子，從繩子開頭進
          行，遇到藍色往前移，遇到白色留在中間，遇到紅色往後移，如下所示： <br>
          <div style="text-align: center;">
            <div class="pure-g">
              <div class="pure-u-1"><img class="pure-img-responsive" alt="三色旗" title="三色旗"
                  src="images/threeColorsFlags-1.jpg"></div>
            </div>
            <br>
          </div>
          只是要讓移動次數最少的話，就要有些技巧：<br>
          <ol>
            <li>如果圖中W所在的位置為白色，則W+1，表示未處理的部份移至至白色群組。</li>
            <li>如果W部份為藍色，則B與W的元素對調，而B與W必須各+1，表示兩個群組都多了一個元素。</li>
            <li>如果W所在的位置是紅色，則將W與R交換，但R要減1，表示未處理的部份減1。</li>
          </ol>
          <br>
          注意B、W、R並不是三色旗的個數，它們只是一個移動的指標；什麼時候移動結束呢？一開始時未處理的R指標會是等於旗子的總數，當R的索引數減至少於
          W的索引數時，表示接下來的旗子就都是紅色了，此時就可以結束移動，如下所示： <br>
          <div style="text-align: center;">
            <div class="pure-g">
              <div class="pure-u-1"><img class="pure-img-responsive" alt="三色旗" title="三色旗"
                  src="images/threeColorsFlags-2.jpg"></div>
            </div>
          </div>
          <br>
          如果可以使用雙向鏈結的話，則B可以再省去，在W遞增時，若遇到藍色，則將藍色移至鏈結前端且W+1，若遇到白色則W+1，若遇到紅色，則將紅色移至
          鏈結尾端且R-1。<br>
          <h2> 演算法</h2>
          <br>
          <pre class="prettyprint"><code>Procedure MOVE(Flags[]) <br>    w = 0<br>    b = 0<br>    r = LENGTH(Flags) - 1<br><br>    WHILE(Flags[w] == 'B' &amp;&amp; w &lt; LENGTH(Flags)) <br>        b = b + 1<br>        w = w + 1<br>    <br>    WHILE(Flags[r] == 'R' &amp;&amp; r &gt; 0)<br>        r = r - 1<br><br>    WHILE(w &lt;= r)<br>        IF(Flags[w] == 'W')<br>            w = w + 1<br>        ELSE IF(Flags[w] == 'B')<br>            SWAP(Flags[], b, w)<br>            b = b + 1<br>            w = w + 1<br>        ELSE<br>            SWAP(Flags[], r, w)<br>            r = r - 1<br></code></pre>
          <h2> 實作：<a href="ThreeColorsFlags.htm#Toy">Toy</a>&nbsp;&nbsp; &nbsp;<a href="ThreeColorsFlags.htm#C">C</a>&nbsp;&nbsp; &nbsp;<a href="ThreeColorsFlags.htm#Java">Java</a>&nbsp;&nbsp;
            &nbsp;<a href="ThreeColorsFlags.htm#Python">Python</a>&nbsp;&nbsp; &nbsp;<a href="ThreeColorsFlags.htm#Scala">Scala</a>&nbsp;&nbsp;&nbsp;
            <a href="ThreeColorsFlags.htm#Ruby">Ruby</a>&nbsp;&nbsp;&nbsp; <a href="ThreeColorsFlags.htm#JavaScript">JavaScript</a>&nbsp;&nbsp;&nbsp;
            <a href="ThreeColorsFlags.htm#Haskell">Haskell</a>&nbsp;&nbsp;&nbsp; <a href="ThreeColorsFlags.htm#Prolog">Prolog</a><br>
          </h2>
          <ul>
            <li><a name="Toy"><a href="../Toy/index.html">Toy</a></a>  </li>
          </ul>
          <pre class="prettyprint"><code>def adjust(flags) {
    b = 0
    w = 0
    r = flags.length() - 1
    while flags.get(w) == 'B' and w < flags.length() {
        w += 1
    }
    while flags.get(r) == 'R' and r > 0 {
        r -= 1
    }
    while w <= r {
        switch flags.get(w) {
            case 'W'
                w += 1
            case 'B'
                flags.swap(b, w)
                w += 1
                b += 1
            default  
                flags.swap(r, w)
                r -= 1
        }
    }
    return flags
}

flags = 'RWBBWRWR'.split('')
println(adjust(flags))</code></pre>
          <br>
          <ul>
            <li><a name="C">C</a>  </li>
          </ul>
          <pre class="prettyprint"><code>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br>#include &lt;string.h&gt; <br><br>#define SWAP_FLAGS(x, y) { char temp; \<br>                     temp = flags[x]; \<br>                     flags[x] = flags[y]; \<br>                     flags[y] = temp; }<br><br>void printFlags(char* flags) {<br>    int i; <br>    for(i = 0; i &lt; strlen(flags); i++) {<br>        printf("%c ", flags[i]); <br>    }<br>    printf("\n");     <br>}<br><br>void adjust(char* flags) {<br>    int w = 0;<br>    int b = 0;<br>    int r = strlen(flags) - 1;<br>    while(flags[w] == 'B' &amp;&amp; w &lt; strlen(flags)) { b++; w++; }<br>    while(flags[r] == 'R' &amp;&amp; r &gt; 0) { r--; }<br>    while(w &lt;= r) switch(flags[w]) {<br>        case 'W':<br>               w++;<br>               break;<br>        case 'B':<br>               SWAP_FLAGS(b, w);<br>               b++; w++;<br>               break;<br>        case 'R':<br>               SWAP_FLAGS(r, w);<br>               r--;<br>    }<br>}<br><br>int main() {<br>    char flags[] = {'R', 'W', 'B', 'W', 'W', <br>                    'B', 'R', 'B', 'W', 'R', '\0'}; <br><br>    printFlags(flags);<br>    adjust(flags);<br>    printFlags(flags);<br><br>    return 0; <br>} <br></code></pre>
          <br>
          <ul>
            <li><a name="Java">Java</a>  </li>
          </ul>
          <pre class="prettyprint"><code>import java.util.*;<br><br>public class Flags {<br>    private static void swap(char[] arr, int x, int y) {<br>        char tmp = arr[x]; arr[x] = arr[y]; arr[y] = tmp;<br>    }<br>    <br>    public static String adjust(String flags) {<br>        char[] fs = flags.toCharArray();<br>        <br>        int b = 0, w = 0, r = fs.length - 1;<br>        while(fs[w] == 'B' &amp;&amp; w &lt; fs.length) { b++; w++; }<br>        while(fs[r] == 'R' &amp;&amp; r &gt; 0) { r--; }<br>        while(w &lt;= r) switch(fs[w]) {<br>            case 'W': <br>                w++;<br>                break;<br>            case 'B': <br>                swap(fs, b, w);<br>                b++; w++; <br>                break;<br>            case 'R': <br>                swap(fs, r, w);<br>                r--;<br>        }<br>        <br>        return new String(fs);<br>    }<br>    <br>    public static void main(String[] args) {<br>        System.out.println(adjust(args[0]));<br>    }<br>}</code></pre>
          <br>
          <ul>
            <li><a name="Python">Python</a></li>
          </ul>
          <pre class="prettyprint"><code>def adjust(flags):<br>    w = 0<br>    r = len(flags) - 1<br>    while flags[w] == "B" and w &lt; len(flags):<br>        w += 1<br>    while flags[r] == "R" and r &gt; 0:<br>        r -= 1<br>    while w &lt;= r:<br>        if flags[w] == "W":<br>            w += 1<br>        elif flags[w] == "B":<br>            flags.insert(0, flags.pop(w))<br>            w += 1<br>        elif flags[w] == "R":<br>            flags.append(flags.pop(w))<br>            r -= 1<br>    return flags<br><br>flags = list(input("輸入三色旗順序（ex. RWBBWRWR）："))<br>flags = adjust(flags)<br>print("移動順序後：", str(flags))</code></pre>
          <br>
          <ul>
            <li><a name="Scala">Scala</a></li>
          </ul>
          <pre class="prettyprint"><code>def adjust(flags: List[Char]) = {<br>    def categorize(bw: List[Char], remain: List[Char], <br>                   r: List[Char]): List[Char] = remain match {<br>                   <br>        case Nil   =&gt; bw ++ r<br>        case x::xs =&gt; x match {<br>            case 'W' =&gt; categorize(bw ++ List(x), xs, r)<br>            case 'B' =&gt; categorize(x::bw, xs, r)<br>            case 'R' =&gt; categorize(bw, xs, x::r)<br>        }<br>        <br>    }<br>    categorize(Nil, flags, Nil)<br>}<br><br>print("輸入三色旗順序（ex. RWBBWRWR）：")<br>adjust(readLine.toList).foreach(print)<br></code></pre>
          <br>
          <ul>
            <li><a name="Ruby">Ruby</a></li>
          </ul>
          <pre class="prettyprint"><code># encoding: big5<br>def adjust(flags)<br>    w = 0<br>    r = flags.length - 1<br>    while flags[w] == "B" &amp;&amp; w &lt; r<br>        w += 1<br>    end<br>    while flags[r] == "R" &amp;&amp; r &gt; 0<br>        r -= 1<br>    end<br>    while w &lt;= r<br>        case flags[w]<br>        when "W"<br>            w += 1<br>        when "B"<br>            flags.insert(0, flags.slice!(w))<br>            w += 1<br>        when "R"<br>            flags &lt;&lt; flags.slice!(w)<br>            r -= 1<br>        end<br>    end<br>    <br>    flags<br>end<br><br>print "輸入三色旗順序（ex. RWBBWRWR）："<br>flags = gets.chomp!<br>flags = adjust(flags)<br>print "移動順序後：#{flags} \n"<br></code></pre>
          <span style="font-family: &quot;Courier New&quot;,Courier,monospace;"><br>
          </span>
          <ul>
            <li><a name="JavaScript">JavaScript</a></li>
          </ul>
          <pre class="prettyprint"><code>function adjust(flags) {<br>    var fs = flags.split("");<br>    var w = 0;<br>    var r = fs.length - 1;<br>    while(fs[w] === 'B' &amp;&amp; w &lt; fs.length) { w++; }<br>    while(fs[r] === 'R' &amp;&amp; r &gt; 0) { r--; }<br>    while(w &lt;= r) switch(fs[w]) {<br>        case 'W':<br>            w++; <br>            break;<br>        case 'B':<br>            fs.unshift(fs.splice(w, 1));<br>            w++;<br>            break;<br>        case 'R':<br>            fs.push(fs.splice(w, 1));<br>            r--;<br>    }<br>    return fs.join("");<br>    <br>}<br><br>print(adjust("RWBWRWBW").toString());<br></code></pre>
          <span style="font-family: &quot;Courier New&quot;,Courier,monospace;"><br>
          </span>
          <ul>
            <li><a name="Haskell">Haskell</a></li>
          </ul>
          <pre class="prettyprint"><code>adjust flags = categorize [] flags []<br>               where categorize bw [] r = bw ++ r<br>                     categorize bw (x:xs) r = case x of <br>                             'W' -&gt; categorize (bw ++ [x]) xs r<br>                             'B' -&gt; categorize (x:bw) xs r<br>                             'R' -&gt; categorize bw xs (x:r)<br>               <br>main = print \$ adjust "WBRRWBWRBWW"<br></code></pre>
          <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">
            <br>
          </span>
          <ul>
            <li><a id="Prolog">Prolog</a></li>
          </ul>
          <p> </p>
          <pre class="prettyprint"><code>categorize(BW, [], R, BWRFlags) :- append(BW, R, BWRFlags).

categorize(BW, [w|T], R, BWRFlags) :- append(BW, [w], BWFlags), 
    categorize(BWFlags, T, R, BWRFlags).
    
categorize(BW, [b|T], R, BWRFlags) :-
    categorize([b | BW], T, R, BWRFlags).
    
categorize(BW, [r|T], R, BWRFlags) :- append(R, [r], RFlags), 
    categorize(BW, T, RFlags, BWRFlags).
    
adjust(Flags, BWRFlags) :- categorize([], Flags, [], BWRFlags).

main(_) :- 
    adjust([w, b, r, r, w, b, w, r, b, w, w], BWRFlags), 
    writef("%p\n", [BWRFlags]).<br></code></pre>
          <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">
          </span><span style="font-family: &quot;Courier New&quot;,Courier,monospace;"><br>
          </span> <br>
          <br>
          <div class="ad-2" style="text-align: center;">
            <script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins
              class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390"
              data-ad-slot="7104125683" data-ad-format="auto"></ins>
            <script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div>
        </article>
      </main>
    </div></body>
    <script src="../js/ui.js"></script>
    <div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
</html>
