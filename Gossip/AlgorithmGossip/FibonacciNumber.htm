<!DOCTYPE html>
<html lang="zh-tw">
  <head><meta http-equiv="refresh" content="0; URL=https://openhome.cc/Gossip/AlgorithmGossip/'https://openhome.cc/zh-tw/algorithm/basics/fibonacci/'">
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="說明
      Fibonacci為1200年代的歐洲數學家，在他的著作中曾經提到：「若有一隻免子每個月生一隻小免子，一個月後小免子也開始生產。起初只有一隻免子，一個月...">
    <meta property="og:locale" content="zh_TW">
    <meta property="og:title" content="費式數列">
    <meta property="og:type" content="article">
    <meta property="og:url" content="https://openhome.cc/Gossip/AlgorithmGossip/FibonacciNumber.htm">
    <meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
    <meta property="og:site_name" content="OPENHOME.CC">
    <meta property="og:description" content="說明
      Fibonacci為1200年代的歐洲數學家，在他的著作中曾經提到：「若有一隻免子每個月生一隻小免子，一個月後小免子也開始生產。起初只有一隻免子，一個月...">
    <title>費式數列</title>
    <link rel="stylesheet" href="../css/pure-0.6.0/pure-min.css">
    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">    <![endif]-->
    <!--[if gt IE 8]><!-->
    <link rel="stylesheet" href="../css/layouts/side-menu.css">
    <!--<![endif]-->
    <link rel="stylesheet" href="../css/caterpillar.css">
    <script async="" src="../google-code-prettify/run_prettify.js"></script>
    <!-- 網頁層級廣告 -->
    <script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
    <script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script>
  </head>
  <body>
    <div id="layout">
      <!-- Menu toggle --> <a href="FibonacciNumber.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span> </a>
      <div id="menu">
        <div class="pure-menu"> <a class="pure-menu-heading" href="index.html">回
            Algorithm</a>
          <ul class="pure-menu-list">
            <br>
            <div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img

                  title="Twitter" alt="Twitter" src="../images/twitter.png"></a>
              <a href="http://www.facebook.com/openhome.cc"><img title="Facebook"

                  alt="Facebook" src="../images/facebook.png"></a>
              </div>
            <br>
            <div id="search box">
              <script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div>
            <br>
            <div class="ad" style="text-align: center;">
              <script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
              <!-- 2015 新版型 160 x 600 廣告 --> <ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px"

                data-ad-client="ca-pub-9750319131714390" data-ad-slot="3747048883"></ins>
              <script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
          </ul>
        </div>
      </div>
      <main id="main">
        <header class="header">
          <h1>費式數列</h1>
        </header>
        <article class="content"><br>
          <div class="ad-3" style="text-align: center;">
            <script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins

              class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390"

              data-ad-slot="7104125683" data-ad-format="auto"></ins>
            <script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div>
          <h2> 說明</h2>
          Fibonacci為1200年代的歐洲數學家，在他的著作中曾經提到：「若有一隻免子每個月生一隻小免子，一個月後小免子也開始生產。起初只有一隻
          免 子，一個月後就有兩隻免子，二個月後有三隻免子，三個月後有五隻免子（小免子投入生產）......」。 <br>
          <br>
          如果不太理解這個例子的話，舉個圖就知道了，注意新生的小免子需一個月成長期才會投入生產，類似的道理也可以用於植物的生長，這就是
          Fibonacci數 列，一般習慣稱之為費氏數列，例如以下： <br>
          1、1 、2、3、5、8、13、21、34、55、89......
          <h2> 解法</h2>
          依說明，我們可以將費氏數列定義為以下： <br>
          <div style="margin-left: 40px; font-weight: bold; font-family: Courier New,Courier,monospace;">F<sub>0</sub>
            = 0<br>
            F<sub>1</sub> = 1<br>
            F<sub>n</sub> = F<sub>n-1</sub> + F<sub>n-2</sub><br>
          </div>
          <h2>算法</h2>
          費氏陣列的解法很多，基本上可以使用遞迴解，演算法最簡單，如下： <br>
          <pre class="prettyprint"><code>Procedure FIB(N) <br>    IF (N = 0 OR N = 1) <br>        RETURN N<br>    ELSE <br>        RETURN FIB(N-1) + FIB(N-2)<br><br></code></pre>
          <br>
          簡單，但是不實用，因為太慢了，在求每一個費氏數時，都會發生嚴重的重覆計算，也就是遞迴該行 ( FIB(N-1) + FIB(N-2)
          )，最差的big-o可以到2的n/2次方，畫張遞迴的樹狀圖就可以知道重覆計算的數有多少了。 <br>
          <br>
          可以採取非遞迴的版本，可以將big(o)減至n，演算法如下： <br>
          <pre class="prettyprint"><code>Procedure FIB(N)<br>    IF (N = 0 OR N = 1) <br>        RETURN N<br><br>    a = 0; <br>    b = 1; <br>    FOR i = 2 TO N [<br>        temp = b; <br>        b = a + b; <br>        a = temp; <br>    ]<br>    RETURN b; <br>] <br></code></pre>
          <br>
          若想要一次列出所有N之前的費氏數，則可以將for迴圈的部份改以陣列，也就是： <br>
          <pre class="prettyprint"><code>F(0) = 0; <br>F(1) = 1; <br>FOR i&lt;-2 TO N [<br>    F(i) = F(i-1) + F(i-2); <br>] <br></code></pre>
          <br>
          費氏陣列並不是使用遞迴來解一定不好，事實上單就執行次數上來說，有一個使用遞迴的演算法可以更快
          (big(o)是以2為底的Logn值)，但是要使用到乘法運算，所以實際上要看所使用的機器而定。 <br>
          <pre class="prettyprint"><code>Procedure FIB(N) <br>    IF (n &lt;= 1)<br>        RETURN(n); <br><br>    IF (n = 2) <br>        RETURN(1); <br>    ELSE [ <br>        i = n/2; <br>        f1 = FIB(i+1); <br>        f2 = FIB(i); <br><br>        IF (n mod 2 = 0)<br>            RETURN( f2*(2*f1+f2) ); <br>        ELSE <br>            RETURN ( f1**2+f2**2 ); <br>    ]<br>] <br></code></pre>
          <br>
          您可以實際使用費氏數列來印證演算法中的那兩條公式，其中f1**2表示f1的平方；若將遞迴的樹狀圖畫出來，就像這樣：<br>
          <div style="text-align: center;">
            <div class="pure-g">
              <div class="pure-u-1"><img class="pure-img-responsive" alt="費式數列"

                  title="費式數列" src="images/fibonacciNumber-1.jpg"></div>
            </div>
          </div>
          <br>
          另外費氏數列還有公式解，導證方式就不提了：<br>
          <div style="text-align: center;">
            <div class="pure-g">
              <div class="pure-u-1"><img class="pure-img-responsive" alt="費式數列"

                  title="費式數列" src="images/fibonacciNumber-2.jpg"></div>
            </div>
          </div>
          您說，如果兔子不只生一隻小兔子的話怎麼辦？像這種問題，我們可以將費氏數列加以擴充，稱之為擴充費氏數列： <br>
          <div style="margin-left: 40px; font-weight: bold; font-family: Courier New,Courier,monospace;">F<sub>0</sub>
            = 0<br>
            F<sub>1</sub> = 1<br>
            F<sub>n</sub> = X * F<sub>n-1</sub> + Y * F<sub>n-2</sub><br>
          </div>
          <br>
          當X、Y等於1時，自然就是一般的費氏數列了。 <br>
          <br>
          想瞭解費氏數列與自然界神奇的關係，可以造訪這個 <a href="http://episte.math.ntu.edu.tw/articles/sm/sm_02_08_1/index.html">網
            頁<cite class="urllink"></cite></a>。
          <h2> 實作：<a href="FibonacciNumber.htm#Toy">Toy</a> &nbsp;&nbsp; <a href="FibonacciNumber.htm#C">C</a>&nbsp;&nbsp;
            &nbsp;<a href="FibonacciNumber.htm#Java">Java</a>&nbsp;&nbsp; &nbsp;<a href="FibonacciNumber.htm#Python">Python</a>&nbsp;&nbsp;
            &nbsp;<a href="FibonacciNumber.htm#Scala">Scala</a>&nbsp;&nbsp;&nbsp; <a href="FibonacciNumber.htm#Ruby">Ruby</a>&nbsp;&nbsp;&nbsp;
            <a href="FibonacciNumber.htm#JavaScript">JavaScript</a>&nbsp;&nbsp;&nbsp;&nbsp; <a href="FibonacciNumber.htm#Haskell">Haskell</a>&nbsp;&nbsp;&nbsp;
            <a href="FibonacciNumber.htm#Prolog">Prolog</a><br>
          </h2>
          <ul>
            <li><a name="Toy"><a href="../Toy/index.html">Toy</a></a> </li>
          </ul>
          <pre class="prettyprint"><code>def fib(n) {
    if n == 0 or n == 1 {
        return n
    }
    return fib(n - 1) + fib(n - 2)
}

iterate(0, 10).forEach(i -&gt; println(fib(i)))<br></code></pre>
          <br>
          <ul>
            <li><a name="C">C</a> </li>
          </ul>
          <pre class="prettyprint"><code>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br>#define LEN 20 <br><br>void fill_fibonacci_numbers(int*, int);<br>void print(int*, int len);<br><br>int main(void) { <br>    int fib[LEN] = {0}; <br>    <br>    fill_fibonacci_numbers(fib, LEN);<br>    print(fib, LEN);<br><br>    return 0; <br>} <br><br>void fill_fibonacci_numbers(int* fib, int len) {<br>    fib[0] = 0; <br>    fib[1] = 1; <br>    int i;<br>    for(i = 2; i &lt; len; i++) {<br>        fib[i] = fib[i-1] + fib[i-2]; <br>    }<br>}<br><br>void print(int* arr, int len) {<br>    int i;<br>    for(i = 0; i &lt; len; i++) { printf("%d ", arr[i]); } <br>    printf("\n");<br>}<br></code></pre>
          <br>
          <ul>
            <li><a name="Java">Java</a> </li>
          </ul>
          <pre class="prettyprint"><code>import java.util.*;<br><br>public class Fibonacci {<br>    private List&lt;Integer&gt; fib = new ArrayList&lt;&gt;();<br>&nbsp;   {<br>        fib.add(0);<br>        fib.add(1);<br>    }<br>    <br>    Integer get(int n) {<br>        if(n &gt;= fib.size()) for(int i = fib.size(); i &lt;= n; i++) {<br>            fib.add(fib.get(i - 1) + fib.get(i - 2));<br>        }<br>        return fib.get(n);<br>    }<br>    <br>    public static void main(String[] args) {<br>        Fibonacci fibonacci = new Fibonacci();<br>        for(int i = 0; i &lt; 20; i++) {<br>            System.out.print(fibonacci.get(i) + " ");<br>        }<br>    }<br>}<br></code></pre>
          <br>
          <ul>
            <li><a name="Python">Python</a></li>
          </ul>
          <pre class="prettyprint"><code>def fibonacci(n, fib = [0, 1]):<br>    if n &gt;= len(fib):<br>        for i in range(len(fib), n + 1):<br>            fib.append(fib[i - 1] + fib[i - 2])<br>    return fib[n]<br><br>for i in range(0, 20):<br>    print(fibonacci(i), end=' ')<br></code></pre>
          <br>
          <ul>
            <li><a name="Scala">Scala</a><br>
            </li>
          </ul>
          <pre class="prettyprint"><code>def fib(n: Int): Int = n match {<br>    case 0 =&gt; 0<br>    case 1 =&gt; 1<br>    case _ =&gt; fib(n - 1) + fib(n - 2)<br>}<br>(for(i &lt;- 0 until readInt) yield fib(i)).foreach(i =&gt; print(i + " "))<br></code></pre>
          <br>
          <ul>
            <li><a name="Ruby">Ruby</a><br>
            </li>
          </ul>
          <pre class="prettyprint"><code># encoding: Big5<br>fibonacci = -&gt; {<br>    fib = [0, 1]<br>    -&gt; n { <br>        if n &gt;= fib.size<br>            fib.size.upto(n) do |i|<br>                fib &lt;&lt; fib[i - 1] + fib[i - 2]<br>            end<br>        end<br>        fib[n]<br>    }<br>}.call<br><br>print "輸入個數："<br>length = gets.to_i<br>0.upto(length - 1) do |i|<br>    print fibonacci.call(i).to_s + ' '<br>end<br></code></pre>
          <br>
          <ul>
            <li><a name="JavaScript">JavaScript</a></li>
          </ul>
          <pre class="prettyprint"><code>var fibonacci = function() {<br>    var fib = [0, 1];<br>    return function(n) {<br>        if(n &gt;= fib.length) for(var i = fib.length; i &lt;= n; i++) {<br>            fib[i] = fib[i - 1] + fib[i - 2];<br>        }<br>        return fib[n];<br>    };<br>}();<br>    <br>for(var i = 0; i &lt; 20; i++) { print(fibonacci(i)); }<br></code></pre>
          <br>
          <ul>
            <li><a name="Haskell">Haskell</a></li>
          </ul>
          <pre class="prettyprint"><code>fibonacci 0 = 0<br>fibonacci 1 = 1<br>fibonacci n = addPrevsRecusivelyUntilCounterIsN (fib 1) (fib 0) 2 n<br><br>addPrevsRecusivelyUntilCounterIsN prev1 prev2 counter n<br>    | counter == n = result<br>    | otherwise = addPrevsRecusivelyUntilCounterIsN result prev1 (counter + 1) n<br>    where result = prev1 + prev2<br><br>main = sequence [print (fibonacci i) | i &lt;- [0..19]]<br></code></pre>
          <br>
          <ul>
            <li><a id="Prolog">Prolog</a></li>
          </ul>
          <pre class="prettyprint"><code>fibonacci(0, 0).
fibonacci(1, 1).
fibonacci(N, Result) :- NP1 is N - 1, NP2 is N - 2, 
                        fibonacci(NP1, FP1), fibonacci(NP2, FP2), 
                        Result is FP1 + FP2.
  
main([Arg0|_]) :-
        atom_number(Arg0, N),
        fibonacci(N, Result),
        writef("The nth %n is %d\n", [Arg0, Result]).<br></code></pre>
          <br>
          <div class="ad336-280" style="text-align: center;">
            <script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins

              class="adsbygoogle" style="display:inline-block;width:336px;height:280px"

              data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681"></ins>
            <script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div>
          <br>
          <div class="recommend" style="text-align: center;">
            <hr>
            <script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins

              class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390"

              data-ad-slot="4953478487" data-ad-format="autorelaxed"></ins>
            <script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div>
        </article>
      </main>
    </div>
    <script src="../js/ui.js"></script>
    <div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
  </body>
</html>
