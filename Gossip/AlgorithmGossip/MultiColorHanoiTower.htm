<!DOCTYPE html>
<html lang="zh-tw">
  <head><meta http-equiv="refresh" content="0; URL=https://openhome.cc/Gossip/AlgorithmGossip/'https://openhome.cc/zh-tw/algorithm/basics/multi-hanoi/'">
    <meta content="text/html; charset=utf-8" http-equiv="content-type">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="說明
      雙色河內塔與三色河內塔是由之前所介紹過的河內塔規則衍生而來，雙色河內塔的目的是將下圖左上的圓環位置經移動成為右下的圓環位置：            ...">
    <meta property="og:locale" content="zh_TW">
    <meta property="og:title" content="雙色、三色河內塔">
    <meta property="og:type" content="article">
    <meta property="og:url" content="https://openhome.cc/Gossip/AlgorithmGossip/MultiColorHanoiTower.htm">
    <meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
    <meta property="og:site_name" content="OPENHOME.CC">
    <meta property="og:description" content="說明
      雙色河內塔與三色河內塔是由之前所介紹過的河內塔規則衍生而來，雙色河內塔的目的是將下圖左上的圓環位置經移動成為右下的圓環位置：            ...">
    <title>雙色、三色河內塔</title>
    <link rel="stylesheet" href="../css/pure-0.6.0/pure-min.css">
    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">    <![endif]-->
    <!--[if gt IE 8]><!-->
    <link rel="stylesheet" href="../css/layouts/side-menu.css">
    <!--<![endif]-->
    <link rel="stylesheet" href="../css/caterpillar.css">
    <script async="" src="../google-code-prettify/run_prettify.js"></script>
  <!-- 網頁層級廣告 --><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script></head>
  <body>
    <div id="layout">
      <!-- Menu toggle --> <a href="MultiColorHanoiTower.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span> </a>
      <div id="menu">
        <div class="pure-menu"> <a class="pure-menu-heading" href="index.html">回
            Algorithm</a>
          <ul class="pure-menu-list">
            <br>
            <div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img
                  title="Twitter" alt="Twitter" src="../images/twitter.png"></a>
              <a href="http://www.facebook.com/openhome.cc"><img title="Facebook"
                  alt="Facebook" src="../images/facebook.png"></a>
              </div>
            <br>
            <div id="search box">
              <script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div>
            <br>
            <div class="ad" style="text-align: center;">
              <script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
              <!-- 2015 新版型 160 x 600 廣告 --> <ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px"
                data-ad-client="ca-pub-9750319131714390" data-ad-slot="3747048883"></ins>
              <script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
          </ul>
        </div>
      </div>
      <main id="main">
        <header class="header">
          <h1>雙色、三色河內塔</h1>
        </header>
        <article class="content"><br>
          <div class="ad-3" style="text-align: center;">
            <script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins
              class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390"
              data-ad-slot="7104125683" data-ad-format="auto"></ins>
            <script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div>
          <h2>說明</h2>
          雙色河內塔與三色河內塔是由之前所介紹過的河內塔規則衍生而來，雙色河內塔的目的是將下圖左上的圓環位置經移動成為右下的圓環位置： <br>
          <div class="pure-g">
            <div class="pure-u-1"><img class="pure-img-responsive" alt="多色河內塔" title="多色河內塔"
                src="images/multiColorHanoiTower-1.jpg"></div>
          </div>
          <br>
          <br>
          而三色河內塔則是將下圖左上的圓環經移動成為右上的圓環： <br>
          <div style="text-align: center;">
            <div class="pure-g">
              <div class="pure-u-1"><img class="pure-img-responsive" alt="多色河內塔"
                  title="多色河內塔" src="images/multiColorHanoiTower-2.jpg"></div>
            </div>
            <br>
          </div>
          <br>
          在移動的過程中，一樣遵守大盤必須在小盤之下的規則，而顏色順序則無限制。
          <h2> 解法</h2>
          無論是雙色河內塔或是三色河內塔，其解法觀念與之前介紹過的河內塔是類似的，同樣也是使用遞迴來解，不過這次遞迴解法的目的不同，我們先來看只有兩個
          盤的情況，這很簡單，只要將第一柱的黃色移動至第二柱，而接下來第一柱的藍色移動至第三柱。 <br>
          <br>
          再來是四個盤的情況，首先必須用遞迴完成下圖左上至右下的移動： <br>
          <div style="text-align: center;">
            <div class="pure-g">
              <div class="pure-u-1"><img class="pure-img-responsive" alt="多色河內塔"
                  title="多色河內塔" src="images/multiColorHanoiTower-3.jpg"></div>
            </div>
          </div>
          <br>
          接下來最底層的就不用管它們了，因為它們已經就定位，只要再處理第一柱的上面兩個盤子就可以了。<br>
          <br>
          那麼六個盤的情況呢？一樣！首先必須用遞迴完成下圖左上至右下的移動： <br>
          <div style="text-align: center;">
            <div class="pure-g">
              <div class="pure-u-1"><img class="pure-img-responsive" alt="多色河內塔"
                  title="多色河內塔" src="images/multiColorHanoiTower-4.jpg"></div>
            </div>
          </div>
          <br>
          接下來最底層的就不用管它們了，因為它們已經就定位，只要再處理第一柱上面的四個盤子就可以了，這又與之前只有四盤的情況相同，接下來您就知道該如何
          進行解題了，無論是八個盤、十個盤以上等，都是用這個觀念來解題。<br>
          <br>
          那麼三色河內塔呢？一樣，直接來看九個盤的情況，首先必須完成下圖的移動結果： <br>
          <div style="text-align: center;">
            <div class="pure-g">
              <div class="pure-u-1"><img class="pure-img-responsive" alt="多色河內塔"
                  title="多色河內塔" src="images/multiColorHanoiTower-5.jpg"></div>
            </div>
            <br>
          </div>
          <br>
          接下來最底兩層的就不用管它們了，因為它們已經就定位，只要再處理第一柱上面的三個盤子就可以了。<br>
          <div style="text-align: center;">
            <div class="pure-g">
              <div class="pure-u-1"><img class="pure-img-responsive" alt="多色河內塔"
                  title="多色河內塔" src="images/multiColorHanoiTower-6.jpg"></div>
            </div>
          </div>
          <br>
          您也可以看看 <a href="http://obelix.ee.duth.gr/%7Eapostolo/TowersOfHanoi/index.html">Towers
            of Hanoi Page</a> 中有關於河內塔的討論。<br>
          <h2>雙色河內塔實作：<a href="MultiColorHanoiTower.htm#2_Toy">Toy</a>&nbsp;&nbsp;&nbsp; <a href="MultiColorHanoiTower.htm#2_Python">Python</a>&nbsp;&nbsp;&nbsp; <a href="MultiColorHanoiTower.htm#2_Prolog">Prolog</a><br>
          </h2>
          <h2>三色河內塔實作：<a href="MultiColorHanoiTower.htm#3_Toy">Toy</a>&nbsp;&nbsp;&nbsp; <a href="MultiColorHanoiTower.htm#3_Python">Python</a>&nbsp;&nbsp;&nbsp; <a href="MultiColorHanoiTower.htm#3_Prolog">Prolog</a><br>
          </h2>
          <br>
          <ul>
            <li><a name="2_Toy"><a href="../Toy/index.html">雙色河內塔 Toy</a></a></li>
          </ul>
          <pre class="prettyprint"><code>def hanoi(n, a, b, c) {
    if n == 1 {
        println('{0} to {1}'.format(a, b))
        println('{0} to {1}'.format(a, c))
        println('{0} to {1}'.format(b, c))
    }
    else {
        hanoi(n - 1, a, b, c)
        println('{0} to {1}'.format(a, b))
        hanoi(n - 1, c, a, b)
        println('{0} to {1}'.format(a, c))
        hanoi(n - 1, b, c, a)
        println('{0} to {1}'.format(b, c))
        hanoi(n - 1, a, b, c)
    }
}
        
def two_colors_hanoi(n, a, b, c) {
    if n == 1 {
        println('{0} to {1}'.format(a, b))
        println('{0} to {1}'.format(a, c))
     }
     else {
        hanoi(n - 1, a, b, c)
        println('{0} to {1}'.format(a, b))
        hanoi(n - 1, c, a, b)
        println('{0} to {1}'.format(a, c))
        hanoi(n - 1, b, c, a)

        two_colors_hanoi(n - 1, a, b, c)
    }
}
        
two_colors_hanoi(3, 'A', 'B', 'C')
</code></pre> <br>
          <ul>
            <li><a name="2_Python"></a>雙色河內塔 Python<br>
            </li>
          </ul>
          <pre class="prettyprint"><code>def hanoi(n, a, b, c):
    if n == 1:
        print('{} to {}'.format(a, b))
        print('{} to {}'.format(a, c))
        print('{} to {}'.format(b, c))
    else:
        hanoi(n - 1, a, b, c)
        print('{} to {}'.format(a, b))
        hanoi(n - 1, c, a, b)
        print('{} to {}'.format(a, c))
        hanoi(n - 1, b, c, a)
        print('{} to {}'.format(b, c))
        hanoi(n - 1, a, b, c)
        
def two_colors_hanoi(n, a, b, c):
    if n == 1:
        print('{} to {}'.format(a, b))
        print('{} to {}'.format(a, c))
    else:
        hanoi(n - 1, a, b, c)
        print('{} to {}'.format(a, b))
        hanoi(n - 1, c, a, b)
        print('{} to {}'.format(a, c))
        hanoi(n - 1, b, c, a)

        two_colors_hanoi(n - 1, a, b, c)
        
two_colors_hanoi(3, 'A', 'B', 'C')
</code></pre> <br>
          <ul>
            <li><a id="2_Prolog">雙色河內塔 Prolog</a></li>
          </ul>
          <pre class="prettyprint"><code>move(A, B) :- writef("%p to %p\n", [A, B]).

hanoi(1, A, B, C) :- 
    move(A, B), move(A, C), move(B, C), !.
hanoi(N, A, B, C) :-
    M is N - 1,
    hanoi(M, A, B, C),
    move(A, B),
    hanoi(M, C, A, B),
    move(A, C),
    hanoi(M, B, C, A),
    move(B, C),
    hanoi(M, A, B, C).
    
two_colors_hanoi(1, A, B, C) :-
    move(A, B), move(A, C), !.

two_colors_hanoi(N, A, B, C) :-
    M is N - 1,
    hanoi(M, A, B, C),
    move(A, B),
    hanoi(M, C, A, B),
    move(A, C),
    hanoi(M, B, C, A).
    
main(_) :-
    two_colors_hanoi(2, a, b, c).
</code></pre> <br>
------------------------------------------------------------------------------------------------------------------<br>
          <br>
<ul>
            <li><a name="3_Toy"><a href="../Toy/index.html">三色河內塔 Toy</a></a></li>
          </ul>
          <pre class="prettyprint"><code>def hanoi(n, a, b, c) {
    if n == 1 {
        println('{0} to {1}'.format(a, b))
        println('{0} to {1}'.format(a, b))
        println('{0} to {1}'.format(a, c))
        println('{0} to {1}'.format(b, c))
        println('{0} to {1}'.format(b, c))
    }
    else {
        hanoi(n - 1, a, b, c)
        println('{0} to {1}'.format(a, b))
        println('{0} to {1}'.format(a, b))
        println('{0} to {1}'.format(a, b))

        hanoi(n - 1, c, b, a)
        println('{0} to {1}'.format(b, c))
        println('{0} to {1}'.format(b, c))
        println('{0} to {1}'.format(b, c))
        
        hanoi(n - 1, a, b, c)
    }
}
        
        
def three_colors_hanoi(n, a, b, c) {
    if n == 1 {
        println('{0} to {1}'.format(a, c))
        println('{0} to {1}'.format(a, b))
        println('{0} to {1}'.format(a, b))
        println('{0} to {1}'.format(c, a))
        println('{0} to {1}'.format(b, c))
    }
    else {
        hanoi(n - 1, a, b, c)
        println('{0} to {1}'.format(a, b))
        println('{0} to {1}'.format(a, b))
        println('{0} to {1}'.format(a, b))
        
        hanoi(n - 1, c, b, a)
        println('{0} to {1}'.format(b, c))
        println('{0} to {1}'.format(b, c))
        println('{0} to {1}'.format(b, c))
        
        hanoi(n - 1, a, c, b)
        println('{0} to {1}'.format(c, a))
        
        hanoi(n - 1, b, c, a)
        println('{0} to {1}'.format(c, b))

        three_colors_hanoi(n - 1, a, b, c)
    }
}
        
three_colors_hanoi(3, 'A', 'B', 'C')
</code></pre> <br>          
          <ul>
            <li><a name="3_Python"></a>三色河內塔 Python<br>
            </li>
          </ul>
          <pre class="prettyprint"><code>def hanoi(n, a, b, c):
    if n == 1:
        print('{} to {}'.format(a, b))
        print('{} to {}'.format(a, b))
        print('{} to {}'.format(a, c))
        print('{} to {}'.format(b, c))
        print('{} to {}'.format(b, c))
    else:
        hanoi(n - 1, a, b, c)
        print('{} to {}'.format(a, b))
        print('{} to {}'.format(a, b))
        print('{} to {}'.format(a, b))

        hanoi(n - 1, c, b, a)
        print('{} to {}'.format(b, c))
        print('{} to {}'.format(b, c))
        print('{} to {}'.format(b, c))
        
        hanoi(n - 1, a, b, c)
        
        
def three_colors_hanoi(n, a, b, c):
    if n == 1:
        print('{} to {}'.format(a, c))
        print('{} to {}'.format(a, b))
        print('{} to {}'.format(a, b))
        print('{} to {}'.format(c, a))
        print('{} to {}'.format(b, c))
    else:
        hanoi(n - 1, a, b, c)
        print('{} to {}'.format(a, b))
        print('{} to {}'.format(a, b))
        print('{} to {}'.format(a, b))
        
        hanoi(n - 1, c, b, a)
        print('{} to {}'.format(b, c))
        print('{} to {}'.format(b, c))
        print('{} to {}'.format(b, c))
        
        hanoi(n - 1, a, c, b)
        print('{} to {}'.format(c, a))
        
        hanoi(n - 1, b, c, a)
        print('{} to {}'.format(c, b))

        three_colors_hanoi(n - 1, a, b, c)
        
three_colors_hanoi(3, 'A', 'B', 'C')</code></pre>
          <br>
          <ul>
            <li> <a id="3_Prolog">三色河內塔 Prolog</a></li>
          </ul>
          <pre class="prettyprint"><code>move(A, B) :- writef("%p to %p\n", [A, B]).

hanoi(1, A, B, C) :-
    move(A, B), 
    move(A, B), 
    move(A, C), 
    move(B, C), 
    move(B, C), !.
hanoi(N, A, B, C) :-
    M is N - 1,
    hanoi(M, A, B, C),
    move(A, B), move(A, B), move(A, B),
    
    hanoi(M, C, B, A),
    move(B, C), move(B, C), move(B, C), 
    
    hanoi(M, A, B, C).
    
three_colors_hanoi(1, A, B, C) :-
    move(A, C), 
    move(A, B), 
    move(A, B), 
    move(C, A), 
    move(B, C), !.

three_colors_hanoi(N, A, B, C) :-
    M is N - 1,
    hanoi(M, A, B, C),
    move(A, B), move(A, B), move(A, B),
    
    hanoi(M, C, B, A),
    move(B, C), move(B, C), move(B, C),
    
    hanoi(M, A, C, B), 
    move(C, A),
    
    hanoi(M, B, C, A), 
    move(C, B),
    
    three_colors_hanoi(M, A, B, C). 
    
main(_) :-
    three_colors_hanoi(2, a, b, c).
</code></pre> <br>
          <br>
          <div class="ad336-280" style="text-align: center;">
            <script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins
              class="adsbygoogle" style="display:inline-block;width:336px;height:280px"
              data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681"></ins>
            <script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div>
          <br>
          <div class="recommend" style="text-align: center;">
            <hr>
            <script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins
              class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390"
              data-ad-slot="4953478487" data-ad-format="autorelaxed"></ins>
            <script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div>
        </article>
      </main>
    </div></body>
    <script src="../js/ui.js"></script>
    <div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
</html>
