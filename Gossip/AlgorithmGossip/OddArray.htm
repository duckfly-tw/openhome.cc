<!doctype html><html lang="zh-tw">
<head><meta http-equiv="refresh" content="0; URL=https://openhome.cc/Gossip/AlgorithmGossip/'https://openhome.cc/zh-tw/algorithm/matrix/odd-magic/'">
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="說明

      
將1到n(為奇數)的數字排列在nxn的方陣上，且各行、各列與各對角線的和必須相同，如下所示：



      
      


      
    ...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="奇數魔方陣">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/AlgorithmGossip/OddArray.htm">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="說明

      
將1到n(為奇數)的數字排列在nxn的方陣上，且各行、各列與各對角線的和必須相同，如下所示：



      
      


      
    ...">


    <title>奇數魔方陣</title>

<link rel="stylesheet" href="../css/pure-0.6.0/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="../css/layouts/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="../css/caterpillar.css">
     <script async src="../google-code-prettify/run_prettify.js"></script>
<!-- 網頁層級廣告 --><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="OddArray.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span>
        
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="index.html">回 Algorithm</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="../images/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="../images/facebook.png"></a> </div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div><br><div class="ad" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-9750319131714390"
     data-ad-slot="3747048883"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div></li>
            </ul>
        </div>
    </div>

    <main id="main">
        <header class="header">
            <h1>奇數魔方陣</h1>
        </header>

        <article class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
             




      
      <h2>說明</h2>

      
將1到n(為奇數)的數字排列在nxn的方陣上，且各行、各列與各對角線的和必須相同，如下所示：<br>



      
      <div style="text-align: center;"><div class="pure-g"><div class="pure-u-1"><img class="pure-img-responsive" alt="奇數魔方陣" title="奇數魔方陣" src="images/oddArray-1.jpg" /></div></div><br>


      
      <div style="text-align: left;">
      
      <h2>&nbsp;解法</h2>


      </div>


      
      <div style="text-align: left;">填魔術方陣的方法以奇數最為簡單，第一個數字放在第一行第一列的正中央，然後向右(左)上填，如果右(左)上已有數字，則向下填，如下圖所示： <br>


      
      
      <div style="text-align: center;"><div class="pure-g"><div class="pure-u-1"><img class="pure-img-responsive" alt="奇數魔方陣" title="奇數魔方陣" src="images/oddArray-2.jpg" /></div></div><br>


      </div>

      
      </div>


      </div>

      
一般程式語言的陣列索引多由0開始，為了計算方便，我們利用索引1到n的部份，而在計算是向右(左)上或向下時，我們可以將索引值除以n值，如果得到餘數為1就向下，否則就往右(左)上，原理很簡單，看看是不是已經在同一列上繞一圈就對了。 <br>


      <br>


      
      <h2> 實作：<a href="OddArray.htm#C">C</a>&nbsp;&nbsp; &nbsp;<a href="OddArray.htm#Java">Java</a>&nbsp;&nbsp; &nbsp;<a href="OddArray.htm#Python">Python</a>&nbsp;&nbsp; &nbsp;<a href="OddArray.htm#Scala">Scala</a>&nbsp;&nbsp;&nbsp; <a href="OddArray.htm#Scala"><a href="OddArray.htm#Ruby">Ruby</a><br>
      </a></h2>



      
      <ul>

        <li><a name="C"></a> C
  </li>

      
      </ul>



      
      <pre class="prettyprint"><code>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br><br>#define N 5 <br><br>int main(void) { <br>    int square[N+1][N+1] = {0}; <br><br>    int i = 0; <br>    int j = (N+1) / 2; <br>    int key;<br>    for(key = 1; key &lt;= N*N; key++) { <br>        if((key % N) == 1) <br>            i++; <br>        else { <br>            i--; <br>            j++; <br>        } <br><br>        if(i == 0) <br>            i = N; <br>        if(j &gt; N) <br>            j = 1; <br><br>        square[i][j] = key; <br>    } <br><br>    int m, n;<br>    for(m = 1; m &lt;= N; m++) { <br>        for(n = 1; n &lt;= N; n++) <br>            printf("%2d ", square[m][n]); <br>    } <br><br>    return 0; <br>} <br></code></pre>



      <br>



      
      <ul>

        <li><a name="Java"></a> Java
  </li>

      
      </ul>



      
      <pre class="prettyprint"><code>public class Matrix {<br>    public static int[][] magic(int n) {<br>        int[][] square = new int[n+1][n+1]; <br><br>        for(int i = 0, j = (n + 1) / 2, key = 1; key &lt;= n*n; key++) { <br>            if((key % n) == 1) i++; <br>            else { i--; j++; } <br><br>            if(i == 0) i = n; <br>            if(j &gt; n) j = 1; <br><br>            square[i][j] = key; <br>        }<br>        <br>        int[][] matrix = new int[n][n];<br>        <br>        for(int k = 0; k &lt; matrix.length; k++) {<br>           for(int l = 0; l &lt; matrix[0].length; l++) {<br>               matrix[k][l] = square[k+1][l+1];<br>           }<br>        }<br>        <br>        return matrix;<br>    }<br>    <br>    public static void main(String[] args) {<br>        for(int[] row : Matrix.magic(5)) {<br>            for(int number: row) {<br>                System.out.printf("%2d ", number);<br>            }<br>            System.out.println();<br>         }<br>    }<br>}<br></code></pre><br><ul><li><a name="Python"></a>Python</li></ul><pre class="prettyprint"><code>def magic(n):<br>    square = []<br>    for i in range(n + 1):<br>        square.append([0] * (n + 1))<br>    i = 0<br>    j = (n + 1) // 2<br>    for key in range(1, n ** 2 + 1):<br>        if key % n == 1:<br>            i += 1<br>        else:<br>            i -= 1<br>            j += 1<br>        if i == 0:<br>            i = n<br>        if j &gt; n:<br>            j = 1<br>        square[i][j] = key<br>    matrix = []<br>    for i in range(n):<br>        matrix.append([0] * n)<br>    for k in range(len(matrix)):<br>        for l in range(len(matrix[0])):<br>            matrix[k][l] = square[k + 1][l + 1]<br>    return matrix<br><br>matrix = magic(5)<br>print(matrix)</code></pre><br><ul><li><a name="Scala"></a>Scala</li></ul><pre class="prettyprint"><code>object Matrix {<br>    def magic(n: Int) = {<br>        val square = new Array[Array[Int]](n + 1, n + 1)<br>        var i = 0<br>        var j = (n + 1) / 2<br>        for(key &lt;- 1 to n * n) {<br>            if((key % n) == 1) i += 1<br>            else { i -= 1; j += 1}<br><br>            if(i == 0) i = n<br>            if(j &gt; n) j = 1<br>            <br>            square(i)(j) = key<br>        }<br>        <br>        val matrix = new Array[Array[Int]](n, n)<br>        for(k &lt;- 0 until matrix.length; l &lt;- 0 until matrix(0).length) {<br>            matrix(k)(l) = square(k + 1)(l + 1)<br>        }<br>        matrix<br>    }<br>}<br><br>Matrix.magic(5).foreach(row =&gt; {<br>    row.foreach(number =&gt; printf("%2d ", number))<br>    println()<br>})<br></code></pre><br>
      <ul>
        <li><a name="Ruby"></a>Ruby</li>
      </ul>
      <pre class="prettyprint"><code>def magic(n)<br>    square = Array.new(n + 1) {<br>        Array.new(n + 1, 0)<br>    }<br>    i = 0<br>    j = (n + 1) / 2<br>    1.upto(n ** 2) { |key|<br>        if key % n == 1<br>            i += 1<br>        else<br>            i -= 1<br>            j += 1<br>        end<br>        if i == 0<br>            i = n<br>        end<br>        if j &gt; n<br>            j = 1<br>        end<br>        square[i][j] = key<br>    }<br>    matrix = Array.new(n) {<br>        Array.new(n, 0)<br>    }<br>    matrix.length.times { |k|<br>        matrix[0].length.times { |l|<br>            matrix[k][l] = square[k + 1][l + 1]            <br>        }<br>    }<br>    matrix<br>end<br><br>matrix = magic(5)<br>p matrix<br></code></pre>
      <br>


 

<br><br><div class="ad336-280" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div><br><div class="recommend" style="text-align: center;"><hr><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="4953478487" data-ad-format="autorelaxed"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></article></main></div></body>
<script src="../js/ui.js"></script>
</html>
<div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
