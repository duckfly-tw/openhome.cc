<!doctype html><html lang="zh-tw">
<head>
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="Web應用程式的開發與傳統的單機程式開發在本質上存在著太多的差異，Web應用程式開發人員至今不可避免的必須處理HTTP的細節，而HTTP無狀態的
（stateless）本質，與傳統應用程式必須維持程...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="簡介 JSF">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/JSF/IntroduceJSF.htm">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="Web應用程式的開發與傳統的單機程式開發在本質上存在著太多的差異，Web應用程式開發人員至今不可避免的必須處理HTTP的細節，而HTTP無狀態的
（stateless）本質，與傳統應用程式必須維持程...">


    <title>簡介 JSF</title>

<link rel="stylesheet" href="http://openhome.cc/Gossip/css/pure-0.6.0/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="http://openhome.cc/Gossip/css/layouts/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="http://openhome.cc/Gossip/css/caterpillar.css">
     <script async src="http://openhome.cc/Gossip/google-code-prettify/run_prettify.js"></script>
<!-- 網頁層級廣告 --><script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="IntroduceJSF.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon -->
        <span></span>
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="http://openhome.cc/Gossip/JSF/">回 JSF 目錄</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="../images/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="../images/facebook.png"></a> </div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div><br><div class="ad" style="text-align: center;"><script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-9750319131714390"
     data-ad-slot="3747048883"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div></li>
            </ul>
        </div>
    </div>

    <main id="main">
        <header class="header">
            <h1>簡介 JSF</h1>
        </header>

        <article class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
            
      
Web應用程式的開發與傳統的單機程式開發在本質上存在著太多的差異，Web應用程式開發人員至今不可避免的必須處理HTTP的細節，而HTTP無狀態的
（stateless）本質，與傳統應用程式必須維持程式運行過程中的資訊有明顯的違背，再則Web應用程式面對網站上不同的使用者同時的存取，其執行緒
安全問題以及資料驗證、轉換處理等問題，又是複雜且難以解決的。<br>

      <br>


另一方面，本質上是靜態的HTML與本質上是動態的應用程式又是一項違背，這造成不可避免的，處理網頁設計的美術人員與程式設計人員，必須被彼此加入至視
圖元件中的邏輯互相干擾，即便一些視圖呈現邏輯以標籤的方式呈現，試圖s展現對網頁設計美術人員的親切，但它終究必須牽涉到相關的流程邏輯。<br>

      <br>


有很多方案試著解決種種的困境，而各自的著眼點各不相同，有的從程式設計人員的角度來解決，有的從網頁設計人員的角度來解決，各種的框架被提出，所造成的
是各種不統一的標籤與框架，為了促進產能的整合開發環境（IDE）難以整合這些標籤與框架，另一方面，開發人員的學習負擔也不斷的加重，他們必須一人瞭解
多個角色的工作。<br>

      <br>

      <a href="http://java.sun.com/j2ee/javaserverfaces/">JavaServer Faces</a>&nbsp;
的提出在試圖解決這個問題，它試圖在不同的角度上提供網頁設計人員、應用程式設計人員、元件開發人員解決方案，讓不同技術的人員可以彼此合作又不互相干
擾，它綜合了各家廠商現有的技術特點，由Java Community
Process（JCP）團隊研擬出來的一套標準，並在2004年三月發表了JavaServer Faces 1.0實作成果。<br>

      <br>


從網頁設計人員的角度來看，JavaServer
Faces提供了一套像是新版本的HTML標籤，但它不是靜態的，而是動態的，可以與後端的動態程式結合，但網頁設計人員不需要理會後端的動態部份，網頁
設計人員甚至不太需要接觸JSTL這類的標籤，也可以動態的展現資料（像是動態的查詢表格內容），JavaServer
Faces提供標準的標籤，這可以與網頁編輯程式結合在一起，另一方面，JavaServer Faces也允許您自訂標籤。<br>

      <br>


從應用程式設計人員的角度來看，JavaServer
Faces提供一個與傳統應用程式開發相類似的模型（當然因某些本質上的差異，模型還是稍有不同），他們可以基於事件驅動來開發程式，不必關切HTTP的
處理細節，如果必須處理一些視覺元件的屬性的話，他們也可以直接在整合開發環境上拖拉這些元件，點選設定元件的屬性，JavaServer
Faces甚至還為應用程式設計人員處理了物件與字串（HTTP傳送本質上就是字串）間不匹配的轉換問題。<br>

      <br>


從UI元件開發人員的角度來看，他們可以設計通用的UI元件，讓應用程式的開發產能提高，就如同在設計Swing元件等，UI開發人員可以獨立開發，只要定義好相關的屬性選項來調整細節，而不用受到網頁設計人員或應用程式設計人員的干擾。<br>

      <br>


三個角色的知識領域原則上可以互不干擾，根據您的角色，您只要瞭解其中一個知識領域，就可以運用JavaServer Faces，其它角色的知識領域您可以不用瞭解太多細節。<br>

      <br>


當然，就其中一個角色單獨來看，JavaServer Faces隱藏了許多細節，若要全盤瞭解，其實JavaServer
Faces是複雜的，每一個處理的環境都值得深入探討，所以學習JavaServer
Faces時，您要選擇的是通盤瞭解，還是從使用的角度來瞭解，這就決定了您學習時所要花費的心力。<br>

      <br>


要使用JSF，首先您要先取得JavaServer Faces參考實作（JavaServer Faces Reference
Implementation），在將來，JSF會與Container整合在一起，屆時您只要下載支援的Container，就可以使用JSF的功能。<br>

      <br>


請至 JSF 官方網站的 <a href="http://java.sun.com/j2ee/javaserverfaces/download.html">下載區</a>&nbsp;
下載參考實作，在下載壓縮檔並解壓縮之後，將其 lib 目錄下的 jar
檔案複製至您的Web應用程式的/WEB-INF/lib目錄下，另外您還需要 jstl.jar 與 standard.jar
檔案，這些檔案您可以在 sample
目錄下，解壓縮當中的一個範例，在它的/WEB-INF/lib目錄下找到，將之一併複製至您的Web應用程式的/WEB-INF/lib目錄下，您總共
需要以下的檔案：<br>

      














      
      <ul>

        <li>jsf-impl.jar</li>

        <li>jsf-api.jar</li>

        <li>commons-digester.jar</li>

        <li>commons-collections.jar</li>

        <li>commons-beanutils.jar</li>

        <li>jstl.jar</li>

        <li>standard.jar</li>

      
      </ul>


      <br>


接下來配置Web應用程式的web.xml，使用JSF時，所有的請求都透過FacesServlet來處理，您可以如下定義：<br>





      
      <ul>

        <li>web.xml</li>

      
      </ul>





      
      <pre class="prettyprint"><code lang="java">&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;<br> <br> &lt;web-app xmlns="http://java.sun.com/xml/ns/j2ee"<br>    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"<br>    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee <br>    http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"<br>    version="2.4"&gt;<br> <br>    &lt;description&gt;<br>        JSF Demo<br>    &lt;/description&gt;<br>    &lt;display-name&gt;JSF Demo&lt;/display-name&gt;<br>    &lt;servlet&gt;<br>        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;<br>        &lt;servlet-class&gt;<br>            javax.faces.webapp.FacesServlet<br>        &lt;/servlet-class&gt;<br>        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;<br>    &lt;/servlet&gt;<br>   <br>    &lt;servlet-mapping&gt;<br>        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;<br>        &lt;url-pattern&gt;*.faces&lt;/url-pattern&gt;<br>    &lt;/servlet-mapping&gt;<br>   <br>    &lt;welcome-file-list&gt;<br>        &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;<br>    &lt;/welcome-file-list&gt;<br>&lt;/web-app&gt;</code></pre>





      <br>

      
在上面的定義中，我們將所有.faces的請求交由FaceServlet來處理，FaceServlet會喚起相對的.jsp網頁，例如請求是 /index.faces的話，則實際上會喚起/index.jsp網頁，完成以上的配置，您就可以開始使用JSF了。



<br><br><div class="ad336-280" style="text-align: center;"><script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div><br><div class="recommend" style="text-align: center;"><hr><script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="4953478487" data-ad-format="autorelaxed"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></article></main></div></body>
<script src="http://openhome.cc/Gossip/js/ui.js"></script>
</html>
<div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
