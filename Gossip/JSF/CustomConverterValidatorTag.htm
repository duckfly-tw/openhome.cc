<!doctype html><html lang="zh-tw">
<head>
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="在 自訂驗證器
中，我們的驗證器只能驗證一種pattern（.+[0-9]+），我們希望可以在JSF頁面上自訂匹配的pattern，然而由於我們使用&lt;f:
validator&gt;這個通用...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="自訂轉換、驗證標籤">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/JSF/CustomConverterValidatorTag.htm">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="在 自訂驗證器
中，我們的驗證器只能驗證一種pattern（.+[0-9]+），我們希望可以在JSF頁面上自訂匹配的pattern，然而由於我們使用&lt;f:
validator&gt;這個通用...">


    <title>自訂轉換、驗證標籤</title>

<link rel="stylesheet" href="http://openhome.cc/Gossip/css/pure-0.6.0/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="http://openhome.cc/Gossip/css/layouts/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="http://openhome.cc/Gossip/css/caterpillar.css">
     <script async src="http://openhome.cc/Gossip/google-code-prettify/run_prettify.js"></script>
<!-- 網頁層級廣告 --><script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="CustomConverterValidatorTag.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon -->
        <span></span>
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="http://openhome.cc/Gossip/JSF/">回 JSF 目錄</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="../images/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="../images/facebook.png"></a> </div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div><br><div class="ad" style="text-align: center;"><script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-9750319131714390"
     data-ad-slot="3747048883"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div></li>
            </ul>
        </div>
    </div>

    <main id="main">
        <header class="header">
            <h1>自訂轉換、驗證標籤</h1>
        </header>

        <article class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
            
      




在 <a href="CustomValidators.htm">自訂驗證器</a>
中，我們的驗證器只能驗證一種pattern（.+[0-9]+），我們希望可以在JSF頁面上自訂匹配的pattern，然而由於我們使用&lt;f:
validator&gt;這個通用的驗證器標籤，為了要能提供pattern屬性，我們可以使用&lt;f:attribute&gt;標籤來設置，例
如：<br>

      
      
      <div style="margin-left: 40px; font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;....<br>


&nbsp; &lt;h:inputSecret value="#{user.password}" required="true"&gt; <br>


&nbsp;&nbsp;&nbsp; &lt;f:validator validatorId="onlyfun.caterpillar.Password"/&gt;<br>


&nbsp;&nbsp;&nbsp; &lt;f:attribute name="pattern" value=".+[0-9]+"/&gt;<br>


&nbsp;&lt;/h:inputSecret&gt;&lt;p&gt;<br>


&nbsp;....<br>


      </div>

      
&nbsp;<br>

      <br>


使用&lt;f:attribute&gt;標籤來設定屬性，接著我們可以如下取得所設定的屬性：<br>

      

      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;....</span><br>


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;public void validate(FacesContext context, </span><br>


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
UIComponent component, </span><br>


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Object obj)</span><br>


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throws ValidatorException {</span><br>


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp; ....</span><br>


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp; String pattern = (String)</span><br>


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
component.getAttributes().get("pattern");</span><br>


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp; ....</span><br>


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;}</span><br>


      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;....</span><br>


      </div>

      
&nbsp;<br>


您也可以開發自己的一組驗證標籤，並提供相關屬性設定，這需要瞭解JSP Tag Library的撰寫，所以請您先參考 <a href="http://caterpillar.onlyfun.net/Gossip/JSPServlet/JSPServlet.htm">JSP/Servlet</a> 中有關於JSP Tag Library的介紹。<br>

      <br>


要開發驗證器轉用標籤，您可以直接繼承javax.faces.webapp.ValidatorTag，這個類別可以幫您處理大部份的細節，您所需要的，就是重新定義它的createValidator()方法，我們以改寫 <a href="CustomValidators.htm">自訂驗證器</a> 中的PasswordValidator為例：
      <br>






      
      <ul>

        <li> PasswordValidator.java</li>

      
      </ul>






      
      <pre class="prettyprint"><code lang="java">package onlyfun.caterpillar;<br><br>import javax.faces.application.FacesMessage;<br>import javax.faces.component.UIComponent;<br>import javax.faces.context.FacesContext;<br>import javax.faces.validator.Validator;<br>import javax.faces.validator.ValidatorException;<br><br>public class PasswordValidator implements Validator {<br>    private String pattern;<br><br>    public void setPattern(String pattern) {<br>        this.pattern = pattern;<br>    }<br>    <br>    public void validate(FacesContext context, <br>                         UIComponent component, <br>                         Object obj)<br>            throws ValidatorException {<br>        String password = (String) obj;<br>        <br>        if(password.length() &lt; 6) {<br>            FacesMessage message = new FacesMessage(<br>              FacesMessage.SEVERITY_ERROR, <br>              "字元長度小於6", "字元長度不得小於6");<br>            throw new ValidatorException(message);<br>        }<br>        <br>        if(pattern != null &amp;&amp; !password.matches(pattern)) {<br>            FacesMessage message = new FacesMessage(<br>                  FacesMessage.SEVERITY_ERROR, <br>                  "密碼必須包括字元與數字", <br>                  "密碼必須是字元加數字所組成");<br>            throw new ValidatorException(message);<br>        }<br>    }<br>}</code></pre>






      <br>

      
主要的差別是我們提供了pattern屬性，在validate()方法中進行驗證時，是根據我們所設定的pattern屬性，接著我們繼承 javax.faces.webapp.ValidatorTag來撰寫自己的驗證標籤：<br>


      
      <ul>

        <li>PasswordValidatorTag.java</li>

      
      </ul>


      
      <pre class="prettyprint"><code lang="java">package onlyfun.caterpillar;<br><br>import javax.faces.application.Application;<br>import javax.faces.context.FacesContext;<br>import javax.faces.validator.Validator;<br>import javax.faces.webapp.ValidatorTag;<br><br>public class PasswordValidatorTag extends ValidatorTag {<br>    private String pattern;<br>    <br>    public void setPattern(String pattern) {<br>        this.pattern = pattern;<br>    }<br>    <br>    protected Validator createValidator() {<br>        Application application = <br>            FacesContext.getCurrentInstance().<br>                         getApplication();<br>        PasswordValidator validator = <br>            (PasswordValidator) application.createValidator(<br>                    "onlyfun.caterpillar.Password");<br>        validator.setPattern(pattern);<br>        return validator;<br>    }<br>}</code></pre>


      <br>

      
application.createValidator()方法建立驗證器物件時，是根據在faces-config.xml中註冊驗證器的識別（Validater ID）：<br>


      
      <ul>

        <li>faces-config.xml</li>

      
      </ul>


      
      <pre class="prettyprint"><code lang="java">&lt;?xml version="1.0"?&gt;<br>&lt;!DOCTYPE faces-config PUBLIC<br> "-//Sun Microsystems, Inc.//DTD JavaServer Faces Config 1.0//EN"<br> "http://java.sun.com/dtd/web-facesconfig_1_0.dtd"&gt;<br><br>&lt;faces-config&gt;<br> ....<br>    &lt;validator&gt;<br>        &lt;validator-id&gt;<br>            onlyfun.caterpillar.Password<br>        &lt;/validator-id&gt;<br>        &lt;validator-class&gt;<br>            onlyfun.caterpillar.PasswordValidator<br>        &lt;/validator-class&gt;<br>    &lt;/validator&gt;<br> ....<br>&lt;/faces-config&gt;</code></pre>


      <br>

      

剩下來的工作，就是佈署tld描述檔了，我們簡單的定義一下：<br>


      
      <ul>

        <li>taglib.tld</li>

      
      </ul>


      
      <pre class="prettyprint"><code lang="java">&lt;?xml version="1.0" encoding="UTF-8" ?&gt; <br> <br>&lt;taglib xmlns="http://java.sun.com/xml/ns/j2ee" <br>    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" <br>    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee <br>                        web-jsptaglibrary_2_0.xsd" <br>    version="2.0"&gt; <br>    <br>    &lt;description&gt;PasswordValidator Tag&lt;/description&gt; <br>    &lt;tlib-version&gt;1.0&lt;/tlib-version&gt; <br>    &lt;jsp-version&gt;2.0&lt;/jsp-version&gt; <br>    &lt;short-name&gt;co&lt;/short-name&gt; <br>    &lt;uri&gt;https://openhome.cc&lt;/uri&gt; <br><br>    &lt;tag&gt; <br>        &lt;description&gt;PasswordValidator&lt;/description&gt; <br>        &lt;name&gt;passwordValidator&lt;/name&gt; <br>        &lt;tag-class&gt;<br>            onlyfun.caterpillar.PasswordValidatorTag<br>        &lt;/tag-class&gt; <br>        &lt;body-content&gt;empty&lt;/body-content&gt; <br>        &lt;attribute&gt; <br>            &lt;name&gt;pattern&lt;/name&gt; <br>            &lt;required&gt;true&lt;/required&gt; <br>            &lt;rtexprvalue&gt;false&lt;/rtexprvalue&gt; <br>        &lt;/attribute&gt; <br>    &lt;/tag&gt; <br><br>&lt;/taglib&gt;</code></pre>


      <br>

      
而我們的index.jsp改寫如下：<br>


      
      <ul>

        <li>index.jsp</li>

      
      </ul>


      
      <pre class="prettyprint"><code lang="java">&lt;%@ taglib uri="http://java.sun.com/jsf/core" prefix="f" %&gt;<br>&lt;%@ taglib uri="http://java.sun.com/jsf/html" prefix="h" %&gt;<br>&lt;%@ taglib uri="/WEB-INF/taglib.tld" prefix="co" %&gt;<br>&lt;%@page contentType="text/html;charset=Big5"%&gt; <br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;title&gt;驗證器示範&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    &lt;f:view&gt;<br>        &lt;h:messages layout="table" style="color:red"/&gt;<br>        &lt;h:form&gt;<br>            &lt;h3&gt;請輸入您的名稱&lt;/h3&gt;<br>            &lt;h:outputText value="#{user.errMessage}"/&gt;&lt;p&gt;<br>           名稱: &lt;h:inputText value="#{user.name}" <br>                              required="true"/&gt;&lt;p&gt;<br>           密碼: &lt;h:inputSecret value="#{user.password}" <br>                                required="true"&gt;<br>                     &lt;co:passwordValidator pattern=".+[0-9]+"/&gt;<br>                 &lt;/h:inputSecret&gt; &lt;p&gt;<br>            &lt;h:commandButton value="送出" <br>                             action="#{user.verify}"/&gt;<br>        &lt;/h:form&gt;<br>    &lt;/f:view&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</code></pre>


      <br>

      
主要的差別是，我們使用了自己的驗證器標籤：<br>

      
      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&lt;co:passwordValidator pattern=".+[0-9]+"/&gt;</span><br>


      </div>

      
&nbsp;<br>


如果要自訂轉換器標籤，方法也是類似，您要作的是繼承javax.faces.webapp.ConverterTag，並重新定義其 createConverter()方法。


<br><br><div class="ad336-280" style="text-align: center;"><script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div><br><div class="recommend" style="text-align: center;"><hr><script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="4953478487" data-ad-format="autorelaxed"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></article></main></div></body>
<script src="http://openhome.cc/Gossip/js/ui.js"></script>
</html>
<div class="analytics"><script async src="https://www.googletagmanager.com/gtag/js?id=G-QVQQYFSC8J"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-QVQQYFSC8J');</script></div>
