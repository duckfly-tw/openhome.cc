<!doctype html><html lang="zh-tw">
<head><meta http-equiv="refresh" content="0; URL=https://openhome.cc/Gossip/DesignPattern/'https://openhome.cc/zh-tw/pattern/structural/facade/'">
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="您
打算使用某個程式庫來開發您的應用程式，程式庫中可能有Some、Other與Another等類別，您的應用程式也許會像這樣撰寫來完成某個（些）動
作：
      
      class...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="Facade 模式">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/DesignPattern/FacadePattern.htm">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="您
打算使用某個程式庫來開發您的應用程式，程式庫中可能有Some、Other與Another等類別，您的應用程式也許會像這樣撰寫來完成某個（些）動
作：
      
      class...">


    <title>Facade 模式</title>

<link rel="stylesheet" href="../css/pure-0.6.0/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="../css/layouts/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="../css/caterpillar.css">
     <script async src="../google-code-prettify/run_prettify.js"></script>
<!-- 網頁層級廣告 --><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="FacadePattern.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span>
        
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="https://openhome.cc/Gossip/DesignPattern/index.html">回設計模式</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="../images/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="../images/facebook.png"></a> </div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div><br><div class="ad" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-9750319131714390"
     data-ad-slot="3747048883"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div></li>
            </ul>
        </div>
    </div>

    <main id="main">
        <header class="header">
            <h1>Facade 模式</h1>
        </header>

        <article class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
            您
打算使用某個程式庫來開發您的應用程式，程式庫中可能有Some、Other與Another等類別，您的應用程式也許會像這樣撰寫來完成某個（些）動
作：<br>
      
      <div style="margin-left: 40px;">class
Application {<br>
      &nbsp;&nbsp;&nbsp;
void doAction() {<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Some some = new Some();<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Other other = new Other();<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Another another = new Another();<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//..讓這些物件作一些互動以產生結果<br>
      &nbsp;&nbsp;&nbsp;
}<br>
      }<br>
      </div>
      <br>
您的應用程式直接使用了程式庫中所提供的各種API，也就是應用程式直接與程式庫有了高度耦合，這有幾個問題值得討論，將來程式庫異動，您的應用程式中與
該程式庫相關部份，都要一一找出修改，如果未來有更換程式庫的可能性，這種設計方式顯然地屆時必須作出大幅修改。<br>
      <br>
您可以檢視應用程式使用這些程式庫的方式，釐出一個入口（Facade）介面，讓對程式庫的依賴實現在對介面的實作上，例如：<br>
      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">interface
Service {</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;
void doAction();</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">}</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;
      </span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">class
ActionService implements Service {</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;
public void doAction() {</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Some some = new Some();</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Other other = new Other();</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Another another = new Another();</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
//..作一些互動以產生結果&nbsp;&nbsp;&nbsp;&nbsp; </span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;
}</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">}</span><br>
      </div>
      <br>
而應用程式僅依賴在入口介面上：<br>
      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">class
Application {</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;
private Service service;</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;
Application(Service service) {</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
this.service = service;</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;
}</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;
void doAction() {</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
service.doAction();</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;&nbsp;&nbsp;
}</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">}</span><br>
      </div>
      <br>
應
用程式不需要再知曉程式庫各種API的存在，因而不會對程式庫產生耦合，如果您從另一個角度來想，ActionService若是由熟悉程式庫的開發人員
所撰寫，提供給另一個撰寫Application的開發人員所使用，則後者並不用一定得知曉程式庫如何使用，有利於分工合作，將來就算開發
ActionService的開發人員改寫或重新實作了另一個Service類別，撰寫Application的開發人員也無需修改寫它的程式。<br>
      <br>
如果使用Python示範類似的概念：<br>
      
      <div style="margin-left: 40px;"><span style="font-weight: bold;">class ActionService:</span><br>
      <span style="font-weight: bold;">&nbsp; &nbsp; def doAction(self):</span><br>
      <span style="font-weight: bold;">&nbsp; &nbsp; &nbsp; &nbsp; some = Some()</span><br>
      <span style="font-weight: bold;">&nbsp; &nbsp; &nbsp; &nbsp; other = Other()</span><br>
      <span style="font-weight: bold;">&nbsp; &nbsp; &nbsp; &nbsp; another =
Another()</span><br>
      <span style="font-weight: bold;">&nbsp; &nbsp; &nbsp; &nbsp; # 作一些互動以產生結果</span><br>
      <br>
      <span style="font-weight: bold;">class Application:</span><br>
      <span style="font-weight: bold;">&nbsp; &nbsp; def __init__(self, service):</span><br>
      <span style="font-weight: bold;">&nbsp; &nbsp; &nbsp; &nbsp; self.service =
service</span><br>
      <span style="font-weight: bold;">&nbsp; &nbsp; def doAction(self):</span><br>
      <span style="font-weight: bold;">&nbsp; &nbsp; &nbsp; &nbsp;
service.doAction()</span><br>
      </div>
      <br>
這是Facade模式的例子，Facade模式可以簡化程式庫的使用、隱藏所依賴的程式庫、降低對程式庫的耦合、有利於分工合作。Facade模式的結構
如下：<br>
      <div class="pure-g"><div class="pure-u-1"><img class="pure-img-responsive" alt="" src="images/Facade-1.jpg" /></div></div><br>
      <br>
Facade模式隱藏了各個元件之間的合作行為，以及元件本身的操作與設定細節，固而必失去了一些直接操作元件的方便性，所以對於喜歡追求
與操作細節的程式設計人員而言，不會很喜歡透過Facade來操作背後的元件，所以您的Facade介面設計，通常要在元件依賴性及元件的支接操作性之間
作個平衡。<br><br><div class="ad336-280" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div><br><div class="recommend" style="text-align: center;"><hr><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="4953478487" data-ad-format="autorelaxed"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></article></main></div></body>
<script src="../js/ui.js"></script>
</html>
<div class="analytics">
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'G-QVQQYFSC8J', 'auto');
  ga('send', 'pageview');

</script>
</div>
