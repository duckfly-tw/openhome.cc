<!doctype html><html lang="zh-tw">
<head><meta http-equiv="refresh" content="0; URL=https://openhome.cc/Gossip/DesignPattern/'https://openhome.cc/zh-tw/pattern/structural/decorator/'">
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="您
打算設計一個點餐程式，目前主餐有炸雞、漢堡，您打算讓點了主餐的客入選擇附餐時可以有優惠，如果您使用繼承的方式來達到這個目的，例如：
      
      class
FriedChic...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="Decorator 模式">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/DesignPattern/DecoratorPattern.htm">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="您
打算設計一個點餐程式，目前主餐有炸雞、漢堡，您打算讓點了主餐的客入選擇附餐時可以有優惠，如果您使用繼承的方式來達到這個目的，例如：
      
      class
FriedChic...">


    <title>Decorator 模式</title>

<link rel="stylesheet" href="../css/pure-0.6.0/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="../css/layouts/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="../css/caterpillar.css">
     <script async src="../google-code-prettify/run_prettify.js"></script>
<!-- 網頁層級廣告 --><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="DecoratorPattern.htm#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span>
        
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="https://openhome.cc/Gossip/DesignPattern/index.html">回設計模式</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="../images/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="../images/facebook.png"></a> </div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><gcse:searchbox-only></gcse:searchbox-only></div><br><div class="ad" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-9750319131714390"
     data-ad-slot="3747048883"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div></li>
            </ul>
        </div>
    </div>

    <main id="main">
        <header class="header">
            <h1>Decorator 模式</h1>
        </header>

        <article class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
            您
打算設計一個點餐程式，目前主餐有炸雞、漢堡，您打算讓點了主餐的客入選擇附餐時可以有優惠，如果您使用繼承的方式來達到這個目的，例如：<br>
      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">class
FriedChicken {</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;
&nbsp; double price() {</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;
&nbsp; &nbsp; &nbsp; return 49.0;</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;
&nbsp; }</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">}</span><br>
      <br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">class
SideDishOne extends FriedChicken {</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;
&nbsp; double price() {</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;
&nbsp; &nbsp; &nbsp; return super.price() + 30.0;</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">&nbsp;
&nbsp; }</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">}</span><br>
      </div>
      <br>
在使用繼承時，多想一下這個問題是否只能用繼承來解決總是好的。以這個設計為例，您繼承父類別之後，<span style="font-weight: bold;">只是取得父類別的price()執行結果再進一步加以處理</span>，另一方面，如果漢堡
也想要搭配附餐一，目前的SideDishOne顯然無法給漢堡<span style="font-weight: bold;">重用</span>，
您還得為漢堡建立有附餐一的子類別。<br>
&nbsp;<br>
如果採取以下的設計，可以解決問題：<br>
      <div class="pure-g"><div class="pure-u-1"><img class="pure-img-responsive" alt="" src="images/Decorator-1.jpg" /></div></div><br>
      <br>
      這個設計不採取繼承而改以組合的方式，如果以Java來示範如何為不同的主餐增加附餐的話，如下所示：<br>
      
      <pre class="prettyprint"><code>interface Meal {<br>    String getContent();<br>    double price();<br>}<br><br>class FriedChicken implements Meal {<br>    public String getContent() {<br>        return "不黑心炸雞";<br>    }<br>    public double price() {<br>        return 49.0;<br>    }<br>}<br><br>class Hamburger implements Meal {<br>    public String getContent() {<br>        return "美味蟹堡";<br>    }<br>    public double price() {<br>        return 99.0;<br>    }<br>}<br><br>abstract class SideDish implements Meal {<br>    protected Meal meal;<br>    SideDish(Meal meal) {<br>        this.meal = meal;<br>    }<br>}<br><br>class SideDishOne extends SideDish {<br>    SideDishOne(Meal meal) {<br>        super(meal);<br>    }<br>    public String getContent() {<br>        return meal.getContent() + " | 可樂 | 薯條";<br>    }<br>    public double price() {<br>        return meal.price() + 30.0;<br>    }<br>}<br><br>public class Main {<br>    public static void main(String[] args) {<br>        Meal meal = new SideDishOne(new FriedChicken());<br>        System.out.println("點了：" + meal.getContent());<br>        System.out.println("價格：" + meal.price());<br>    }<br>}</code></pre>
      <br>
各種SideDish的實現並不改變Meal實作本來的操作功能，而是基於原本的操作功能再增加處理，SideDish的各種實現，可以套用至Meal的
各種實作，例如FriedChicken或Hambergur。<br>
      <br>
這是<span style="font-weight: bold;">Decorator模式的實現，其不採取繼承的方式，而以組合的方式動態地為物
件添加功能。</span><br>
      <br>
以Python來實現的話：<br>
      
      <pre class="prettyprint"><code>class FriedChicken:<br>    def getContent(self):<br>        return "不黑心炸雞"<br>    def price(self):<br>        return 49.0<br><br>class Hamburger:<br>    def getContent(self):<br>        return "美味蟹堡"<br>    def price(self):<br>        return 99.0<br>        <br>class SideDish:<br>    def __init__(self, meal):<br>        self.meal = meal<br><br>class SideDishOne(SideDish):<br>    def __init__(self, meal):<br>        SideDish.__init__(self, meal)<br>        <br>    def getContent(self):<br>        return self.meal.getContent() + " | 可樂 | 薯條"<br>    <br>    def price(self):<br>        return self.meal.price() + 30.0<br><br>meal = SideDishOne(FriedChicken())<br>print("點了：" + meal.getContent())<br>print("價格：" + str(meal.price()))<br></code></pre>
      <br>
以UML來表示Decorator模式之結構：<br>
      <div class="pure-g"><div class="pure-u-1"><img class="pure-img-responsive" alt="" src="images/Decorator-2.jpg" /></div></div><br>
      <br>
      <br>
在Java
Swing中的JTextArea元件預設並沒有捲軸，捲
軸的功能是由JScrollPane元件提供，如果您要加入一個具有捲軸功能的JTextArea，您可以如下進行設計：<br>
      
      <div style="margin-left: 40px;"><span style="font-weight: bold; font-family: Courier New,Courier,monospace;">JTextArea
textArea = new JTextArea();</span><br>
      <span style="font-weight: bold; font-family: Courier New,Courier,monospace;">JScrollPane
scrollPane = new JScrollPane(textArea);</span><br>
      </div>
      &nbsp;<br>
像這樣動態地為JTextArea加入功能的方法，也是Decorator模式的實現，您不用修改JTextArea的功能，也不用使用繼承來擴充
JTextArea，對JTextArea來說，JScrollPane就好像是一個捲軸外框，直接套
在JTextArea上作裝飾，就好比您在照片上加上一個相框的意思。<br>
      <br>
在Gof的書中指出另一個範例，它設計一個Stream抽象類，而有一個StreamDecorator類，Stream的子類有處理記憶體串流的
MemoryStream與FileStream，有各種方法可以處理串流，也許只是單純的處理字元，也許會進行壓縮，也許會進行字元轉換，最基本的處理
可能是處理字元，而字元壓縮被視為額外的功能，這個時候我們可以使用裝飾模式，在需要的時候為Stream物件加上必要的功能，事實上在java.io中
的許多輸入輸出物件，就是採取這樣的設計，例如：<br>
      
      <div style="margin-left: 40px;"><span style="font-weight: bold;">BufferedReader reader = new
BufferedReader(new FileReader("Main.java"));</span><br>
      </div>
      <br>
FileReader
沒有緩衝區處理的功能，所以由BufferedReader來提供，BufferedReader並沒有改變FileReader的功能，而是在既有
FileReader的操作上再作加工的動作，而BufferedReader也不只可以用於FileReader，只要是Reader的子類別，都可以
套用BufferedReader，例如讀取使用者輸入時：<br>
      
      <div style="margin-left: 40px;"><span style="font-weight: bold;">BufferedReader reader = new </span>BufferedReader(new
InputStreamReader(System.in));<br>
      </div>
      <br>
      透過適當地設計，Decorator角色的類別，也可以重用於適當的元件。<br><br><br><div class="ad336-280" style="text-align: center;"><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div><br><div class="recommend" style="text-align: center;"><hr><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-9750319131714390" data-ad-slot="4953478487" data-ad-format="autorelaxed"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></article></main></div></body>
<script src="../js/ui.js"></script>
</html>
<div class="analytics">
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'G-QVQQYFSC8J', 'auto');
  ga('send', 'pageview');

</script>
</div>
